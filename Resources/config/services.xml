<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <!--

    HOWTO Customize:

        Copy parameters to your custom bundle's services.xml and change the values
        Also, ensure that your custom bundle loads after this bundle in app/AppKernel.php so these values are over-written

    -->

    <parameters>
        <!-- Basic config settings -->
        <parameter key="cart.is_production">0</parameter>
        <parameter key="cart.config.currency.base">USD</parameter>
        <parameter key="cart.email.from.main">test@test.com</parameter>
        <parameter key="cart.email.to.main">test@test.com</parameter>
        <parameter key="cart.order.reference.offset">100000000</parameter>
        <parameter key="cart.order.payment.enabled">1</parameter>
        <parameter key="cart.order.invoice.enabled">1</parameter>
        <parameter key="cart.image.upload.frontend.enabled">0</parameter><!-- enable image uploads in frontend -->
        <parameter key="cart.add.product.redirect.cart">1</parameter><!-- redirect to cart or product page after add to cart -->
        <parameter key="cart.discount.enabled">1</parameter><!-- enable discounts -->
        <parameter key="cart.total.discount.auto">1</parameter><!-- automatically load, validate, and apply discounts from the database -->
        <parameter key="cart.shipping.enabled">1</parameter><!-- enable shipping, shipping totals, and shipping section in checkout -->
        <parameter key="cart.shipping.multi.enabled">0</parameter><!-- enable multiple shipping destinations and/or shipping source addresses -->
        <parameter key="cart.shipping.total.enabled">1</parameter><!-- enable immediate charges and population, otherwise empty/free shipments are saved; for editing later -->
        <parameter key="cart.tax.enabled">1</parameter><!-- enable tax, tax totals -->
        <parameter key="cart.allow.guest.checkout">0</parameter><!-- enable guest checkout -->
        <parameter key="cart.allowed.country.ids">US,GB</parameter><!-- allowed country codes, in CSV -->
        <parameter key="cart.customer.login.reload.cart">1</parameter><!-- reload recent cart after login -->
        <parameter key="cart.shipping.flatrate.enabled">1</parameter><!-- enable config-based flat-rate shipping -->
        <parameter key="cart.shipping.flatrate.db.enabled">1</parameter><!-- enable db-based flatrate shipping -->
        <parameter key="cart.add.product.enable.qty.check">1</parameter><!-- enable product inventory checking when adding to cart -->
        <!-- ReCaptcha Settings -->
        <parameter key="recaptcha.key.site"> </parameter>
        <parameter key="recaptcha.key.secret"> </parameter>
        <!-- Default Ship-From Address -->
        <parameter key="cart.shipping.src.key">main</parameter>
        <parameter key="cart.shipping.src.label">Main</parameter>
        <parameter key="cart.shipping.src.street"> </parameter>
        <parameter key="cart.shipping.src.city">Kansas City</parameter>
        <parameter key="cart.shipping.src.province">MO</parameter>
        <parameter key="cart.shipping.src.postcode">64138</parameter>
        <parameter key="cart.shipping.src.country">US</parameter>
        <!-- End Ship-From Address -->
        <parameter key="cart.load.currency">cart.currency</parameter><!-- service id of currency service -->
        <parameter key="cart.load.admin">cart.search.doctrine</parameter><!-- service id of admin search service -->
        <parameter key="cart.load.frontend">cart.entity</parameter><!-- service id of frontend entity loading service -->
        <parameter key="cart.search.frontend">cart.search.doctrine</parameter><!-- service id of frontend search service -->
        <parameter key="cart.checkout.spa.enabled">1</parameter><!-- Enable Single-Page Checkout, otherwise use Multi-Page -->
        <parameter key="cart.upload.temp">/tmp</parameter><!-- directory for temporary file uploads -->
        <parameter key="cart.auth.token.class">MobileCart\CoreBundle\Service\GuardTokenAuthService</parameter>
        <parameter key="cart.auth.token.allow.admin">0</parameter><!-- Enable GuardTokenAuth for Admin access -->
        <!-- Forms -->
        <parameter key="cart.form.type.category.class">MobileCart\CoreBundle\Form\CategoryType</parameter>
        <parameter key="cart.form.type.config_setting.class">MobileCart\CoreBundle\Form\ConfigSettingType</parameter>
        <parameter key="cart.form.type.contact.class">MobileCart\CoreBundle\Form\ContactFormType</parameter>
        <parameter key="cart.form.type.content.class">MobileCart\CoreBundle\Form\ContentType</parameter>
        <parameter key="cart.form.type.content_slot.class">MobileCart\CoreBundle\Form\ContentSlotType</parameter>
        <parameter key="cart.form.type.customer.class">MobileCart\CoreBundle\Form\CustomerType</parameter>
        <parameter key="cart.form.type.customer.forgotpassword.class">MobileCart\CoreBundle\Form\CustomerForgotPasswordType</parameter>
        <parameter key="cart.form.type.customer.updatepassword.class">MobileCart\CoreBundle\Form\CustomerUpdatePasswordType</parameter>
        <parameter key="cart.form.type.customer.login.class">MobileCart\CoreBundle\Form\CustomerLoginType</parameter>
        <parameter key="cart.form.type.customer.profile.class">MobileCart\CoreBundle\Form\CustomerProfileType</parameter>
        <parameter key="cart.form.type.customer.register.class">MobileCart\CoreBundle\Form\CustomerRegisterType</parameter>
        <parameter key="cart.form.type.customer_address.class">MobileCart\CoreBundle\Form\CustomerAddressType</parameter>
        <parameter key="cart.form.type.discount.class">MobileCart\CoreBundle\Form\DiscountType</parameter>
        <parameter key="cart.form.type.export_options.class">MobileCart\CoreBundle\Form\ExportOptionsType</parameter>
        <parameter key="cart.form.type.item_var.class">MobileCart\CoreBundle\Form\ItemVarType</parameter>
        <parameter key="cart.form.type.item_var_option.class">MobileCart\CoreBundle\Form\ItemVarOptionType</parameter>
        <!-- Services -->
        <parameter key="cart.session.class">MobileCart\CoreBundle\Service\CartSessionService</parameter>
        <parameter key="cart.class">MobileCart\CoreBundle\Service\CartService</parameter>
        <parameter key="cart.checkout.session.class">MobileCart\CoreBundle\Service\CheckoutSessionService</parameter>
        <parameter key="cart.currency.class">MobileCart\CoreBundle\Service\CurrencyService</parameter>
        <parameter key="cart.discount.class">MobileCart\CoreBundle\Service\DiscountService</parameter>
        <parameter key="cart.entity.class">MobileCart\CoreBundle\Service\DoctrineEntityService</parameter>
        <parameter key="cart.entity.pdo.class">MobileCart\CoreBundle\Service\PdoEntityService</parameter>
        <parameter key="cart.export.class">MobileCart\CoreBundle\Service\ExportService</parameter>
        <parameter key="cart.geography.class">MobileCart\CoreBundle\Service\GeographyService</parameter>
        <parameter key="cart.image.class">MobileCart\CoreBundle\Service\ImageService</parameter>
        <parameter key="cart.locale.class">MobileCart\CoreBundle\Service\LocaleService</parameter>
        <parameter key="cart.menu.class">MobileCart\CoreBundle\Service\MenuService</parameter>
        <parameter key="cart.order.class">MobileCart\CoreBundle\Service\OrderService</parameter>
        <parameter key="cart.payment.class">MobileCart\CoreBundle\Service\PaymentService</parameter>
        <parameter key="cart.recaptcha.class">MobileCart\CoreBundle\Service\RecaptchaV2Service</parameter>
        <parameter key="cart.search.class">MobileCart\CoreBundle\Service\DoctrineSearchService</parameter>
        <parameter key="cart.search.doctrine.class">MobileCart\CoreBundle\Service\DoctrineSearchService</parameter>
        <parameter key="cart.search.frontend.class">MobileCart\CoreBundle\Service\DoctrineSearchService</parameter>
        <parameter key="cart.search.admin.class">MobileCart\CoreBundle\Service\DoctrineSearchService</parameter>
        <parameter key="cart.shipping.class">MobileCart\CoreBundle\Service\ShippingService</parameter>
        <parameter key="cart.tax.class">MobileCart\CoreBundle\Service\TaxService</parameter>
        <parameter key="cart.theme.class">MobileCart\CoreBundle\Service\ThemeService</parameter>
        <parameter key="cart.theme.config.class">MobileCart\CoreBundle\Service\ThemeConfig</parameter>
        <parameter key="cart.total.class">MobileCart\CoreBundle\Service\CartTotalService</parameter>
        <parameter key="cart.twig.frontend.class">MobileCart\CoreBundle\Twig\Extension\FrontendExtension</parameter>
        <!-- Entity Repositories -->
        <parameter key="cart.repo.admin_user">MobileCartCoreBundle:AdminUser</parameter>
        <parameter key="cart.repo.cart">MobileCartCoreBundle:Cart</parameter>
        <parameter key="cart.repo.cart_item">MobileCartCoreBundle:CartItem</parameter>
        <parameter key="cart.repo.category">MobileCartCoreBundle:Category</parameter>
        <parameter key="cart.repo.category_image">MobileCartCoreBundle:CategoryImage</parameter>
        <parameter key="cart.repo.category_var_value_datetime">MobileCartCoreBundle:CategoryVarValueDatetime</parameter>
        <parameter key="cart.repo.category_var_value_decimal">MobileCartCoreBundle:CategoryVarValueDecimal</parameter>
        <parameter key="cart.repo.category_var_value_int">MobileCartCoreBundle:CategoryVarValueInt</parameter>
        <parameter key="cart.repo.category_var_value_text">MobileCartCoreBundle:CategoryVarValueText</parameter>
        <parameter key="cart.repo.category_var_value_varchar">MobileCartCoreBundle:CategoryVarValueVarchar</parameter>
        <parameter key="cart.repo.category_product">MobileCartCoreBundle:CategoryProduct</parameter>
        <parameter key="cart.repo.config_setting">MobileCartCoreBundle:ConfigSetting</parameter>
        <parameter key="cart.repo.content">MobileCartCoreBundle:Content</parameter>
        <parameter key="cart.repo.content_image">MobileCartCoreBundle:ContentImage</parameter>
        <parameter key="cart.repo.content_slot">MobileCartCoreBundle:ContentSlot</parameter>
        <parameter key="cart.repo.content_var_value_datetime">MobileCartCoreBundle:ContentVarValueDatetime</parameter>
        <parameter key="cart.repo.content_var_value_decimal">MobileCartCoreBundle:ContentVarValueDecimal</parameter>
        <parameter key="cart.repo.content_var_value_int">MobileCartCoreBundle:ContentVarValueInt</parameter>
        <parameter key="cart.repo.content_var_value_text">MobileCartCoreBundle:ContentVarValueText</parameter>
        <parameter key="cart.repo.content_var_value_varchar">MobileCartCoreBundle:ContentVarValueVarchar</parameter>
        <parameter key="cart.repo.customer">MobileCartCoreBundle:Customer</parameter>
        <parameter key="cart.repo.customer_address">MobileCartCoreBundle:CustomerAddress</parameter>
        <parameter key="cart.repo.customer_group_product_price">MobileCartCoreBundle:CustomerGroupProductPrice</parameter>
        <parameter key="cart.repo.customer_token">MobileCartCoreBundle:CustomerToken</parameter>
        <parameter key="cart.repo.customer_var_value_datetime">MobileCartCoreBundle:CategoryVarValueDatetime</parameter>
        <parameter key="cart.repo.customer_var_value_decimal">MobileCartCoreBundle:CategoryVarValueDecimal</parameter>
        <parameter key="cart.repo.customer_var_value_int">MobileCartCoreBundle:CategoryVarValueInt</parameter>
        <parameter key="cart.repo.customer_var_value_text">MobileCartCoreBundle:CategoryVarValueText</parameter>
        <parameter key="cart.repo.customer_var_value_varchar">MobileCartCoreBundle:CategoryVarValueVarchar</parameter>
        <parameter key="cart.repo.discount">MobileCartCoreBundle:Discount</parameter>
        <parameter key="cart.repo.item">MobileCartCoreBundle:Item</parameter>
        <parameter key="cart.repo.item_var">MobileCartCoreBundle:ItemVar</parameter>
        <parameter key="cart.repo.item_var_option">MobileCartCoreBundle:ItemVarOption</parameter>
        <parameter key="cart.repo.item_var_option_datetime">MobileCartCoreBundle:ItemVarOptionDatetime</parameter>
        <parameter key="cart.repo.item_var_option_decimal">MobileCartCoreBundle:ItemVarOptionDecimal</parameter>
        <parameter key="cart.repo.item_var_option_int">MobileCartCoreBundle:ItemVarOptionInt</parameter>
        <parameter key="cart.repo.item_var_option_text">MobileCartCoreBundle:ItemVarOptionText</parameter>
        <parameter key="cart.repo.item_var_option_varchar">MobileCartCoreBundle:ItemVarOptionVarchar</parameter>
        <parameter key="cart.repo.item_var_set">MobileCartCoreBundle:ItemVarSet</parameter>
        <parameter key="cart.repo.item_var_set_var">MobileCartCoreBundle:ItemVarSetVar</parameter>
        <parameter key="cart.repo.object_log">MobileCartCoreBundle:ObjectLog</parameter>
        <parameter key="cart.repo.order">MobileCartCoreBundle:Order</parameter>
        <parameter key="cart.repo.order_var_value_datetime">MobileCartCoreBundle:OrderVarValueDatetime</parameter>
        <parameter key="cart.repo.order_var_value_decimal">MobileCartCoreBundle:OrderVarValueDecimal</parameter>
        <parameter key="cart.repo.order_var_value_int">MobileCartCoreBundle:OrderVarValueInt</parameter>
        <parameter key="cart.repo.order_var_value_text">MobileCartCoreBundle:OrderVarValueText</parameter>
        <parameter key="cart.repo.order_var_value_varchar">MobileCartCoreBundle:OrderVarValueVarchar</parameter>
        <parameter key="cart.repo.order_item">MobileCartCoreBundle:OrderItem</parameter>
        <parameter key="cart.repo.order_shipment">MobileCartCoreBundle:OrderShipment</parameter>
        <parameter key="cart.repo.order_invoice">MobileCartCoreBundle:OrderInvoice</parameter>
        <parameter key="cart.repo.order_payment">MobileCartCoreBundle:OrderPayment</parameter>
        <parameter key="cart.repo.order_refund">MobileCartCoreBundle:OrderRefund</parameter>
        <parameter key="cart.repo.product">MobileCartCoreBundle:Product</parameter>
        <parameter key="cart.repo.product_config">MobileCartCoreBundle:ProductConfig</parameter>
        <parameter key="cart.repo.product_tier_price">MobileCartCoreBundle:ProductTierPrice</parameter>
        <parameter key="cart.repo.product_image">MobileCartCoreBundle:ProductImage</parameter>
        <parameter key="cart.repo.product_var_value_datetime">MobileCartCoreBundle:ProductVarValueDatetime</parameter>
        <parameter key="cart.repo.product_var_value_decimal">MobileCartCoreBundle:ProductVarValueDecimal</parameter>
        <parameter key="cart.repo.product_var_value_int">MobileCartCoreBundle:ProductVarValueInt</parameter>
        <parameter key="cart.repo.product_var_value_text">MobileCartCoreBundle:ProductVarValueText</parameter>
        <parameter key="cart.repo.product_var_value_varchar">MobileCartCoreBundle:ProductVarValueVarchar</parameter>
        <parameter key="cart.repo.ref_country_region">MobileCartCoreBundle:RefCountryRegion</parameter>
        <parameter key="cart.repo.search_term">MobileCartCoreBundle:SearchTerm</parameter>
        <parameter key="cart.repo.shipping_method">MobileCartCoreBundle:ShippingMethod</parameter>
        <parameter key="cart.repo.url_rewrite">MobileCartCoreBundle:UrlRewrite</parameter>
        <parameter key="cart.repo.webhook_log">MobileCartCoreBundle:WebhookLog</parameter>
        <!-- Homepage Event Listener -->
        <parameter key="cart.listener.home.view.return.class">MobileCart\CoreBundle\EventListener\Home\ViewReturn</parameter>
        <!-- Admin Dashboard Event Listener -->
        <parameter key="cart.listener.dashboard.notifications.class">MobileCart\CoreBundle\EventListener\Dashboard\DashboardNotifications</parameter>
        <parameter key="cart.listener.dashboard.view.return.class">MobileCart\CoreBundle\EventListener\Dashboard\DashboardViewReturn</parameter>
        <!-- Login Handlers -->
        <parameter key="cart.listener.login.class">MobileCart\CoreBundle\EventListener\Security\Login</parameter>
        <parameter key="cart.listener.login.failed.class">MobileCart\CoreBundle\EventListener\Security\LoginFailed</parameter>
        <parameter key="cart.listener.logout.class">MobileCart\CoreBundle\EventListener\Security\Logout</parameter>
        <!-- Checkout Handlers -->
        <parameter key="cart.listener.checkout.form.billing.address.class">MobileCart\CoreBundle\EventListener\Checkout\CheckoutBillingAddressForm</parameter>
        <parameter key="cart.listener.checkout.form.shipping.address.class">MobileCart\CoreBundle\EventListener\Checkout\CheckoutShippingAddressForm</parameter>
        <parameter key="cart.listener.checkout.form.class">MobileCart\CoreBundle\EventListener\Checkout\CheckoutForm</parameter>
        <parameter key="cart.listener.checkout.form.payment_methods.class">MobileCart\CoreBundle\EventListener\Checkout\CheckoutPaymentMethods</parameter>
        <parameter key="cart.listener.checkout.payment.methods.view.return.class">MobileCart\CoreBundle\EventListener\Checkout\CheckoutPaymentMethodsViewReturn</parameter>
        <parameter key="cart.listener.checkout.view.return.class">MobileCart\CoreBundle\EventListener\Checkout\CheckoutViewReturn</parameter>
        <parameter key="cart.listener.checkout.update.billing.address.class">MobileCart\CoreBundle\EventListener\Checkout\CheckoutUpdateBillingAddress</parameter>
        <parameter key="cart.listener.checkout.totals.discounts.class">MobileCart\CoreBundle\EventListener\Checkout\CheckoutTotalsDiscountsViewReturn</parameter>
        <parameter key="cart.listener.checkout.confirm.order.class">MobileCart\CoreBundle\EventListener\Checkout\CheckoutConfirmOrder</parameter>
        <parameter key="cart.listener.checkout.update.payment.methods.class">MobileCart\CoreBundle\EventListener\Checkout\CheckoutUpdatePaymentMethods</parameter>
        <parameter key="cart.listener.checkout.update.shipping.address.class">MobileCart\CoreBundle\EventListener\Checkout\CheckoutUpdateShippingAddress</parameter>
        <parameter key="cart.listener.checkout.update.shipping.method.class">MobileCart\CoreBundle\EventListener\Checkout\CheckoutUpdateShippingMethod</parameter>
        <parameter key="cart.listener.checkout.update.totals.discounts.class">MobileCart\CoreBundle\EventListener\Checkout\CheckoutUpdateTotalsDiscounts</parameter>
        <parameter key="cart.listener.checkout.update.payment.method.class">MobileCart\CoreBundle\EventListener\Checkout\CheckoutUpdatePaymentMethod</parameter>
        <parameter key="cart.listener.checkout.submit.order.class">MobileCart\CoreBundle\EventListener\Checkout\CheckoutSubmitOrder</parameter>
        <parameter key="cart.listener.checkout.success.return.class">MobileCart\CoreBundle\EventListener\Checkout\CheckoutSuccessReturn</parameter>
        <!-- Contact Form Handlers -->
        <parameter key="cart.listener.contact.form.class">MobileCart\CoreBundle\EventListener\Contact\ContactForm</parameter>
        <parameter key="cart.listener.contact.form.post.class">MobileCart\CoreBundle\EventListener\Contact\ContactFormPost</parameter>
        <!-- Cart Handlers -->
        <parameter key="cart.listener.cart.view.return.class">MobileCart\CoreBundle\EventListener\Cart\ViewReturn</parameter>
        <parameter key="cart.listener.cart.add.product.class">MobileCart\CoreBundle\EventListener\Cart\AddProduct</parameter>
        <parameter key="cart.listener.cart.update.totals.shipping.class">MobileCart\CoreBundle\EventListener\Cart\UpdateTotalsShipping</parameter>
        <parameter key="cart.listener.cart.addtocart.product.form.class">MobileCart\CoreBundle\EventListener\Cart\ProductAddToCartForm</parameter>
        <parameter key="cart.listener.cart.remove.product.class">MobileCart\CoreBundle\EventListener\Cart\RemoveProduct</parameter>
        <parameter key="cart.listener.cart.remove.products.class">MobileCart\CoreBundle\EventListener\Cart\RemoveProducts</parameter>
        <parameter key="cart.listener.cart.add.shipment.class">MobileCart\CoreBundle\EventListener\Cart\AddShipment</parameter>
        <parameter key="cart.listener.cart.update.multi.shipment.class">MobileCart\CoreBundle\EventListener\Cart\UpdateMultiShipment</parameter>
        <parameter key="cart.listener.cart.add.discount.class">MobileCart\CoreBundle\EventListener\Cart\AddDiscount</parameter>
        <parameter key="cart.listener.cart.total.item.class">MobileCart\CoreBundle\EventListener\Cart\ItemTotal</parameter>
        <parameter key="cart.listener.cart.total.shipping.class">MobileCart\CoreBundle\EventListener\Cart\ShipmentTotal</parameter>
        <parameter key="cart.listener.cart.total.tax.class">MobileCart\CoreBundle\EventListener\Cart\TaxTotal</parameter>
        <parameter key="cart.listener.cart.total.discount.class">MobileCart\CoreBundle\EventListener\Cart\DiscountTotal</parameter>
        <parameter key="cart.listener.cart.total.grand.class">MobileCart\CoreBundle\EventListener\Cart\GrandTotal</parameter>
        <!-- Product Handlers -->
        <parameter key="cart.listener.product.search.class">MobileCart\CoreBundle\EventListener\Product\ProductSearch</parameter>
        <parameter key="cart.listener.product.list.class">MobileCart\CoreBundle\EventListener\Product\ProductList</parameter>
        <parameter key="cart.listener.product.admin.form.class">MobileCart\CoreBundle\EventListener\Product\ProductAdminForm</parameter>
        <parameter key="cart.listener.product.create.return.class">MobileCart\CoreBundle\EventListener\Product\ProductCreateReturn</parameter>
        <parameter key="cart.listener.product.update.return.class">MobileCart\CoreBundle\EventListener\Product\ProductUpdateReturn</parameter>
        <parameter key="cart.listener.product.edit.return.class">MobileCart\CoreBundle\EventListener\Product\ProductEditReturn</parameter>
        <parameter key="cart.listener.product.new.return.class">MobileCart\CoreBundle\EventListener\Product\ProductNewReturn</parameter>
        <parameter key="cart.listener.product.view.return.class">MobileCart\CoreBundle\EventListener\Product\ProductViewReturn</parameter>
        <parameter key="cart.listener.product.update.class">MobileCart\CoreBundle\EventListener\Product\ProductUpdate</parameter>
        <parameter key="cart.listener.product.insert.class">MobileCart\CoreBundle\EventListener\Product\ProductInsert</parameter>
        <parameter key="cart.listener.product.delete.class">MobileCart\CoreBundle\EventListener\Product\ProductDelete</parameter>
        <parameter key="cart.listener.product.duplicate.class">MobileCart\CoreBundle\EventListener\Product\ProductDuplicate</parameter>
        <!-- Category Handlers -->
        <parameter key="cart.listener.category.search.class">MobileCart\CoreBundle\EventListener\Category\CategorySearch</parameter>
        <parameter key="cart.listener.category.list.class">MobileCart\CoreBundle\EventListener\Category\CategoryList</parameter>
        <parameter key="cart.listener.category.create.return.class">MobileCart\CoreBundle\EventListener\Category\CategoryCreateReturn</parameter>
        <parameter key="cart.listener.category.update.return.class">MobileCart\CoreBundle\EventListener\Category\CategoryUpdateReturn</parameter>
        <parameter key="cart.listener.category.edit.return.class">MobileCart\CoreBundle\EventListener\Category\CategoryEditReturn</parameter>
        <parameter key="cart.listener.category.new.return.class">MobileCart\CoreBundle\EventListener\Category\CategoryNewReturn</parameter>
        <parameter key="cart.listener.category.update.class">MobileCart\CoreBundle\EventListener\Category\CategoryUpdate</parameter>
        <parameter key="cart.listener.category.insert.class">MobileCart\CoreBundle\EventListener\Category\CategoryInsert</parameter>
        <parameter key="cart.listener.category.delete.class">MobileCart\CoreBundle\EventListener\Category\CategoryDelete</parameter>
        <parameter key="cart.listener.category.admin.form.class">MobileCart\CoreBundle\EventListener\Category\CategoryAdminForm</parameter>
        <!-- ConfigSetting Handlers -->
        <parameter key="cart.listener.config_setting.search.class">MobileCart\CoreBundle\EventListener\ConfigSetting\ConfigSettingSearch</parameter>
        <parameter key="cart.listener.config_setting.list.class">MobileCart\CoreBundle\EventListener\ConfigSetting\ConfigSettingList</parameter>
        <parameter key="cart.listener.config_setting.edit.return.class">MobileCart\CoreBundle\EventListener\ConfigSetting\ConfigSettingEditReturn</parameter>
        <parameter key="cart.listener.config_setting.new.return.class">MobileCart\CoreBundle\EventListener\ConfigSetting\ConfigSettingNewReturn</parameter>
        <parameter key="cart.listener.config_setting.create.return.class">MobileCart\CoreBundle\EventListener\ConfigSetting\ConfigSettingCreateReturn</parameter>
        <parameter key="cart.listener.config_setting.update.return.class">MobileCart\CoreBundle\EventListener\ConfigSetting\ConfigSettingUpdateReturn</parameter>
        <parameter key="cart.listener.config_setting.update.class">MobileCart\CoreBundle\EventListener\ConfigSetting\ConfigSettingUpdate</parameter>
        <parameter key="cart.listener.config_setting.insert.class">MobileCart\CoreBundle\EventListener\ConfigSetting\ConfigSettingInsert</parameter>
        <parameter key="cart.listener.config_setting.delete.class">MobileCart\CoreBundle\EventListener\ConfigSetting\ConfigSettingDelete</parameter>
        <parameter key="cart.listener.config_setting.admin.form.class">MobileCart\CoreBundle\EventListener\ConfigSetting\ConfigSettingAdminForm</parameter>
        <!-- Content Handlers -->
        <parameter key="cart.listener.content.search.class">MobileCart\CoreBundle\EventListener\Content\ContentSearch</parameter>
        <parameter key="cart.listener.content.list.class">MobileCart\CoreBundle\EventListener\Content\ContentList</parameter>
        <parameter key="cart.listener.content.view.return.class">MobileCart\CoreBundle\EventListener\Content\ContentViewReturn</parameter>
        <parameter key="cart.listener.content.edit.return.class">MobileCart\CoreBundle\EventListener\Content\ContentEditReturn</parameter>
        <parameter key="cart.listener.content.new.return.class">MobileCart\CoreBundle\EventListener\Content\ContentNewReturn</parameter>
        <parameter key="cart.listener.content.create.return.class">MobileCart\CoreBundle\EventListener\Content\ContentCreateReturn</parameter>
        <parameter key="cart.listener.content.update.return.class">MobileCart\CoreBundle\EventListener\Content\ContentUpdateReturn</parameter>
        <parameter key="cart.listener.content.update.class">MobileCart\CoreBundle\EventListener\Content\ContentUpdate</parameter>
        <parameter key="cart.listener.content.insert.class">MobileCart\CoreBundle\EventListener\Content\ContentInsert</parameter>
        <parameter key="cart.listener.content.delete.class">MobileCart\CoreBundle\EventListener\Content\ContentDelete</parameter>
        <parameter key="cart.listener.content.admin.form.class">MobileCart\CoreBundle\EventListener\Content\ContentAdminForm</parameter>
        <parameter key="cart.listener.content_slot.search.class">MobileCart\CoreBundle\EventListener\ContentSlot\ContentSlotSearch</parameter>
        <parameter key="cart.listener.content_slot.list.class">MobileCart\CoreBundle\EventListener\ContentSlot\ContentSlotList</parameter>
        <parameter key="cart.listener.content_slot.edit.return.class">MobileCart\CoreBundle\EventListener\ContentSlot\ContentSlotEditReturn</parameter>
        <parameter key="cart.listener.content_slot.new.return.class">MobileCart\CoreBundle\EventListener\ContentSlot\ContentSlotNewReturn</parameter>
        <parameter key="cart.listener.content_slot.create.return.class">MobileCart\CoreBundle\EventListener\ContentSlot\ContentSlotCreateReturn</parameter>
        <parameter key="cart.listener.content_slot.update.return.class">MobileCart\CoreBundle\EventListener\ContentSlot\ContentSlotUpdateReturn</parameter>
        <parameter key="cart.listener.content_slot.update.class">MobileCart\CoreBundle\EventListener\ContentSlot\ContentSlotUpdate</parameter>
        <parameter key="cart.listener.content_slot.insert.class">MobileCart\CoreBundle\EventListener\ContentSlot\ContentSlotInsert</parameter>
        <parameter key="cart.listener.content_slot.delete.class">MobileCart\CoreBundle\EventListener\ContentSlot\ContentSlotDelete</parameter>
        <parameter key="cart.listener.content_slot.admin.form.class">MobileCart\CoreBundle\EventListener\ContentSlot\ContentSlotAdminForm</parameter>
        <!-- Customer Handlers -->
        <parameter key="cart.listener.customer.search.class">MobileCart\CoreBundle\EventListener\Customer\CustomerSearch</parameter>
        <parameter key="cart.listener.customer.list.class">MobileCart\CoreBundle\EventListener\Customer\CustomerList</parameter>
        <parameter key="cart.listener.customer.navigation.class">MobileCart\CoreBundle\EventListener\Customer\CustomerNavigation</parameter>
        <parameter key="cart.listener.customer.edit.return.class">MobileCart\CoreBundle\EventListener\Customer\CustomerEditReturn</parameter>
        <parameter key="cart.listener.customer.new.return.class">MobileCart\CoreBundle\EventListener\Customer\CustomerNewReturn</parameter>
        <parameter key="cart.listener.customer.create.return.class">MobileCart\CoreBundle\EventListener\Customer\CustomerCreateReturn</parameter>
        <parameter key="cart.listener.customer.update.return.class">MobileCart\CoreBundle\EventListener\Customer\CustomerUpdateReturn</parameter>
        <parameter key="cart.listener.customer.register.form.class">MobileCart\CoreBundle\EventListener\Customer\CustomerRegisterForm</parameter>
        <parameter key="cart.listener.customer.admin.form.class">MobileCart\CoreBundle\EventListener\Customer\CustomerAdminForm</parameter>
        <parameter key="cart.listener.customer.register.class">MobileCart\CoreBundle\EventListener\Customer\CustomerRegister</parameter>
        <parameter key="cart.listener.customer.register.confirm.class">MobileCart\CoreBundle\EventListener\Customer\CustomerRegisterConfirm</parameter>
        <parameter key="cart.listener.customer.register.return.class">MobileCart\CoreBundle\EventListener\Customer\CustomerRegisterReturn</parameter>
        <parameter key="cart.listener.customer.register.checkemail.return.class">MobileCart\CoreBundle\EventListener\Customer\CustomerRegisterCheckEmailReturn</parameter>
        <parameter key="cart.listener.customer.register.confirm.return.class">MobileCart\CoreBundle\EventListener\Customer\CustomerRegisterConfirmReturn</parameter>
        <parameter key="cart.listener.customer.register.post.return.class">MobileCart\CoreBundle\EventListener\Customer\CustomerRegisterPostReturn</parameter>
        <parameter key="cart.listener.customer.profile.form.class">MobileCart\CoreBundle\EventListener\Customer\CustomerProfileForm</parameter>
        <parameter key="cart.listener.customer.profile.return.class">MobileCart\CoreBundle\EventListener\Customer\CustomerProfileReturn</parameter>
        <parameter key="cart.listener.customer.profile.post.return.class">MobileCart\CoreBundle\EventListener\Customer\CustomerProfilePostReturn</parameter>
        <parameter key="cart.listener.customer.orders.return.class">MobileCart\CoreBundle\EventListener\Customer\CustomerOrdersReturn</parameter>
        <parameter key="cart.listener.customer.order.return.class">MobileCart\CoreBundle\EventListener\Customer\CustomerOrderReturn</parameter>
        <parameter key="cart.listener.customer.forgotpassword.form.class">MobileCart\CoreBundle\EventListener\Customer\CustomerForgotPasswordForm</parameter>
        <parameter key="cart.listener.customer.forgotpassword.class">MobileCart\CoreBundle\EventListener\Customer\CustomerForgotPassword</parameter>
        <parameter key="cart.listener.customer.forgotpassword.return.class">MobileCart\CoreBundle\EventListener\Customer\CustomerForgotPasswordReturn</parameter>
        <parameter key="cart.listener.customer.forgotpassword.post.return.class">MobileCart\CoreBundle\EventListener\Customer\CustomerForgotPasswordPostReturn</parameter>
        <parameter key="cart.listener.customer.forgotpassword.success.class">MobileCart\CoreBundle\EventListener\Customer\CustomerForgotPasswordSuccess</parameter>
        <parameter key="cart.listener.customer.updatepassword.form.class">MobileCart\CoreBundle\EventListener\Customer\CustomerUpdatePasswordForm</parameter>
        <parameter key="cart.listener.customer.updatepassword.class">MobileCart\CoreBundle\EventListener\Customer\CustomerUpdatePassword</parameter>
        <parameter key="cart.listener.customer.updatepassword.return.class">MobileCart\CoreBundle\EventListener\Customer\CustomerUpdatePasswordReturn</parameter>
        <parameter key="cart.listener.customer.updatepassword.post.return.class">MobileCart\CoreBundle\EventListener\Customer\CustomerUpdatePasswordPostReturn</parameter>
        <parameter key="cart.listener.customer.insert.class">MobileCart\CoreBundle\EventListener\Customer\CustomerInsert</parameter>
        <parameter key="cart.listener.customer.update.class">MobileCart\CoreBundle\EventListener\Customer\CustomerUpdate</parameter>
        <parameter key="cart.listener.customer.delete.class">MobileCart\CoreBundle\EventListener\Customer\CustomerDelete</parameter>
        <parameter key="cart.listener.customer_address.search.class">MobileCart\CoreBundle\EventListener\CustomerAddress\CustomerAddressSearch</parameter>
        <parameter key="cart.listener.customer_address.list.class">MobileCart\CoreBundle\EventListener\CustomerAddress\CustomerAddressList</parameter>
        <parameter key="cart.listener.customer_address.form.class">MobileCart\CoreBundle\EventListener\CustomerAddress\CustomerAddressForm</parameter>
        <parameter key="cart.listener.customer_address.new.return.class">MobileCart\CoreBundle\EventListener\CustomerAddress\CustomerAddressNewReturn</parameter>
        <parameter key="cart.listener.customer_address.create.return.class">MobileCart\CoreBundle\EventListener\CustomerAddress\CustomerAddressCreateReturn</parameter>
        <parameter key="cart.listener.customer_address.edit.return.class">MobileCart\CoreBundle\EventListener\CustomerAddress\CustomerAddressEditReturn</parameter>
        <parameter key="cart.listener.customer_address.insert.class">MobileCart\CoreBundle\EventListener\CustomerAddress\CustomerAddressInsert</parameter>
        <parameter key="cart.listener.customer_address.update.class">MobileCart\CoreBundle\EventListener\CustomerAddress\CustomerAddressUpdate</parameter>
        <parameter key="cart.listener.customer_address.create.return.class">MobileCart\CoreBundle\EventListener\CustomerAddress\CustomerAddressCreateReturn</parameter>
        <parameter key="cart.listener.customer_address.update.return.class">MobileCart\CoreBundle\EventListener\CustomerAddress\CustomerAddressUpdateReturn</parameter>
        <parameter key="cart.listener.customer_address.delete.class">MobileCart\CoreBundle\EventListener\CustomerAddress\CustomerAddressDelete</parameter>
        <!-- Discount Admin Handlers -->
        <parameter key="cart.listener.discount.search.class">MobileCart\CoreBundle\EventListener\Discount\DiscountSearch</parameter>
        <parameter key="cart.listener.discount.list.class">MobileCart\CoreBundle\EventListener\Discount\DiscountList</parameter>
        <parameter key="cart.listener.discount.new.return.class">MobileCart\CoreBundle\EventListener\Discount\DiscountNewReturn</parameter>
        <parameter key="cart.listener.discount.insert.class">MobileCart\CoreBundle\EventListener\Discount\DiscountInsert</parameter>
        <parameter key="cart.listener.discount.edit.return.class">MobileCart\CoreBundle\EventListener\Discount\DiscountEditReturn</parameter>
        <parameter key="cart.listener.discount.update.class">MobileCart\CoreBundle\EventListener\Discount\DiscountUpdate</parameter>
        <parameter key="cart.listener.discount.delete.class">MobileCart\CoreBundle\EventListener\Discount\DiscountDelete</parameter>
        <parameter key="cart.listener.discount.create.return.class">MobileCart\CoreBundle\EventListener\Discount\DiscountCreateReturn</parameter>
        <parameter key="cart.listener.discount.update.return.class">MobileCart\CoreBundle\EventListener\Discount\DiscountUpdateReturn</parameter>
        <parameter key="cart.listener.discount.admin.form.class">MobileCart\CoreBundle\EventListener\Discount\DiscountAdminForm</parameter>
        <!-- Export Handlers -->
        <parameter key="cart.listener.export_options.view.return.class">MobileCart\CoreBundle\EventListener\Export\ExportOptionsViewReturn</parameter>
        <parameter key="cart.listener.export.order_item.class">MobileCart\CoreBundle\EventListener\Export\ExportOrderItem</parameter>
        <parameter key="cart.listener.export.run.class">MobileCart\CoreBundle\EventListener\Export\ExportRun</parameter>
        <!-- EAV Admin Handlers -->
        <parameter key="cart.listener.item_var.search.class">MobileCart\CoreBundle\EventListener\ItemVar\ItemVarSearch</parameter>
        <parameter key="cart.listener.item_var.list.class">MobileCart\CoreBundle\EventListener\ItemVar\ItemVarList</parameter>
        <parameter key="cart.listener.item_var.edit.return.class">MobileCart\CoreBundle\EventListener\ItemVar\ItemVarEditReturn</parameter>
        <parameter key="cart.listener.item_var.new.return.class">MobileCart\CoreBundle\EventListener\ItemVar\ItemVarNewReturn</parameter>
        <parameter key="cart.listener.item_var.create.return.class">MobileCart\CoreBundle\EventListener\ItemVar\ItemVarCreateReturn</parameter>
        <parameter key="cart.listener.item_var.update.return.class">MobileCart\CoreBundle\EventListener\ItemVar\ItemVarUpdateReturn</parameter>
        <parameter key="cart.listener.item_var.update.class">MobileCart\CoreBundle\EventListener\ItemVar\ItemVarUpdate</parameter>
        <parameter key="cart.listener.item_var.insert.class">MobileCart\CoreBundle\EventListener\ItemVar\ItemVarInsert</parameter>
        <parameter key="cart.listener.item_var.delete.class">MobileCart\CoreBundle\EventListener\ItemVar\ItemVarDelete</parameter>
        <parameter key="cart.listener.item_var.admin.form.class">MobileCart\CoreBundle\EventListener\ItemVar\ItemVarAdminForm</parameter>
        <parameter key="cart.listener.item_var_option.search.class">MobileCart\CoreBundle\EventListener\ItemVarOption\ItemVarOptionSearch</parameter>
        <parameter key="cart.listener.item_var_option.list.class">MobileCart\CoreBundle\EventListener\ItemVarOption\ItemVarOptionList</parameter>
        <parameter key="cart.listener.item_var_option.edit.return.class">MobileCart\CoreBundle\EventListener\ItemVarOption\ItemVarOptionEditReturn</parameter>
        <parameter key="cart.listener.item_var_option.new.return.class">MobileCart\CoreBundle\EventListener\ItemVarOption\ItemVarOptionNewReturn</parameter>
        <parameter key="cart.listener.item_var_option.update.class">MobileCart\CoreBundle\EventListener\ItemVarOption\ItemVarOptionUpdate</parameter>
        <parameter key="cart.listener.item_var_option.insert.class">MobileCart\CoreBundle\EventListener\ItemVarOption\ItemVarOptionInsert</parameter>
        <parameter key="cart.listener.item_var_option.create.return.class">MobileCart\CoreBundle\EventListener\ItemVarOption\ItemVarOptionCreateReturn</parameter>
        <parameter key="cart.listener.item_var_option.update.return.class">MobileCart\CoreBundle\EventListener\ItemVarOption\ItemVarOptionUpdateReturn</parameter>
        <parameter key="cart.listener.item_var_option.delete.class">MobileCart\CoreBundle\EventListener\ItemVarOption\ItemVarOptionDelete</parameter>
        <parameter key="cart.listener.item_var_option.admin.form.class">MobileCart\CoreBundle\EventListener\ItemVarOption\ItemVarOptionAdminForm</parameter>
        <parameter key="cart.listener.item_var_set.search.class">MobileCart\CoreBundle\EventListener\ItemVarSet\ItemVarSetSearch</parameter>
        <parameter key="cart.listener.item_var_set.list.class">MobileCart\CoreBundle\EventListener\ItemVarSet\ItemVarSetList</parameter>
        <parameter key="cart.listener.item_var_set.edit.return.class">MobileCart\CoreBundle\EventListener\ItemVarSet\ItemVarSetEditReturn</parameter>
        <parameter key="cart.listener.item_var_set.new.return.class">MobileCart\CoreBundle\EventListener\ItemVarSet\ItemVarSetNewReturn</parameter>
        <parameter key="cart.listener.item_var_set.update.class">MobileCart\CoreBundle\EventListener\ItemVarSet\ItemVarSetUpdate</parameter>
        <parameter key="cart.listener.item_var_set.insert.class">MobileCart\CoreBundle\EventListener\ItemVarSet\ItemVarSetInsert</parameter>
        <parameter key="cart.listener.item_var_set.create.return.class">MobileCart\CoreBundle\EventListener\ItemVarSet\ItemVarSetCreateReturn</parameter>
        <parameter key="cart.listener.item_var_set.update.return.class">MobileCart\CoreBundle\EventListener\ItemVarSet\ItemVarSetUpdateReturn</parameter>
        <parameter key="cart.listener.item_var_set.delete.class">MobileCart\CoreBundle\EventListener\ItemVarSet\ItemVarSetDelete</parameter>
        <parameter key="cart.listener.item_var_set.admin.form.class">MobileCart\CoreBundle\EventListener\ItemVarSet\ItemVarSetAdminForm</parameter>
        <parameter key="cart.listener.item_var_set_var.search.class">MobileCart\CoreBundle\EventListener\ItemVarSetVar\ItemVarSetVarSearch</parameter>
        <parameter key="cart.listener.item_var_set_var.list.class">MobileCart\CoreBundle\EventListener\ItemVarSetVar\ItemVarSetVarList</parameter>
        <parameter key="cart.listener.item_var_set_var.edit.return.class">MobileCart\CoreBundle\EventListener\ItemVarSetVar\ItemVarSetVarEditReturn</parameter>
        <parameter key="cart.listener.item_var_set_var.new.return.class">MobileCart\CoreBundle\EventListener\ItemVarSetVar\ItemVarSetVarNewReturn</parameter>
        <parameter key="cart.listener.item_var_set_var.create.return.class">MobileCart\CoreBundle\EventListener\ItemVarSetVar\ItemVarSetVarCreateReturn</parameter>
        <parameter key="cart.listener.item_var_set_var.update.return.class">MobileCart\CoreBundle\EventListener\ItemVarSetVar\ItemVarSetVarUpdateReturn</parameter>
        <parameter key="cart.listener.item_var_set_var.update.class">MobileCart\CoreBundle\EventListener\ItemVarSetVar\ItemVarSetVarUpdate</parameter>
        <parameter key="cart.listener.item_var_set_var.insert.class">MobileCart\CoreBundle\EventListener\ItemVarSetVar\ItemVarSetVarInsert</parameter>
        <parameter key="cart.listener.item_var_set_var.delete.class">MobileCart\CoreBundle\EventListener\ItemVarSetVar\ItemVarSetVarDelete</parameter>
        <parameter key="cart.listener.item_var_set_var.admin.form.class">MobileCart\CoreBundle\EventListener\ItemVarSetVar\ItemVarSetVarAdminForm</parameter>
        <!-- Order Admin Handlers -->
        <parameter key="cart.listener.order.search.class">MobileCart\CoreBundle\EventListener\Order\OrderSearch</parameter>
        <parameter key="cart.listener.order.list.class">MobileCart\CoreBundle\EventListener\Order\OrderList</parameter>
        <parameter key="cart.listener.order.edit.return.class">MobileCart\CoreBundle\EventListener\Order\OrderEditReturn</parameter>
        <parameter key="cart.listener.order.admin.form.class">MobileCart\CoreBundle\EventListener\Order\OrderAdminForm</parameter>
        <parameter key="cart.listener.order.new.return.class">MobileCart\CoreBundle\EventListener\Order\OrderNewReturn</parameter>
        <parameter key="cart.listener.order.update.class">MobileCart\CoreBundle\EventListener\Order\OrderUpdate</parameter>
        <parameter key="cart.listener.order.insert.class">MobileCart\CoreBundle\EventListener\Order\OrderInsert</parameter>
        <parameter key="cart.listener.order.create.return.class">MobileCart\CoreBundle\EventListener\Order\OrderCreateReturn</parameter>
        <parameter key="cart.listener.order.update.return.class">MobileCart\CoreBundle\EventListener\Order\OrderUpdateReturn</parameter>
        <parameter key="cart.listener.order.delete.class">MobileCart\CoreBundle\EventListener\Order\OrderDelete</parameter>
        <parameter key="cart.listener.order.update.shipping.class">MobileCart\CoreBundle\EventListener\Order\OrderUpdateShipping</parameter>
        <parameter key="cart.listener.order.update.items.class">MobileCart\CoreBundle\EventListener\Order\OrderUpdateItems</parameter>
        <parameter key="cart.listener.order.update.customer.class">MobileCart\CoreBundle\EventListener\Order\OrderUpdateCustomer</parameter>
        <parameter key="cart.listener.order.add.item.class">MobileCart\CoreBundle\EventListener\Order\OrderAddItem</parameter>
        <parameter key="cart.listener.order.remove.item.class">MobileCart\CoreBundle\EventListener\Order\OrderRemoveItem</parameter>
        <parameter key="cart.listener.order.add.discount.class">MobileCart\CoreBundle\EventListener\Order\OrderAddDiscount</parameter>
        <parameter key="cart.listener.order.remove.discount.class">MobileCart\CoreBundle\EventListener\Order\OrderRemoveDiscount</parameter>
        <!-- Order Item Admin Handlers -->
        <parameter key="cart.listener.order_item.search.class">MobileCart\CoreBundle\EventListener\OrderItem\OrderItemSearch</parameter>
        <parameter key="cart.listener.order_item.list.class">MobileCart\CoreBundle\EventListener\OrderItem\OrderItemList</parameter>
        <!-- OrderShipment Admin Handlers -->
        <parameter key="cart.listener.order_shipment.search.class">MobileCart\CoreBundle\EventListener\OrderShipment\OrderShipmentSearch</parameter>
        <parameter key="cart.listener.order_shipment.list.class">MobileCart\CoreBundle\EventListener\OrderShipment\OrderShipmentList</parameter>
        <parameter key="cart.listener.order_shipment.edit.return.class">MobileCart\CoreBundle\EventListener\OrderShipment\OrderShipmentEditReturn</parameter>
        <parameter key="cart.listener.order_shipment.admin.form.class">MobileCart\CoreBundle\EventListener\OrderShipment\OrderShipmentAdminForm</parameter>
        <parameter key="cart.listener.order_shipment.new.return.class">MobileCart\CoreBundle\EventListener\OrderShipment\OrderShipmentNewReturn</parameter>
        <parameter key="cart.listener.order_shipment.update.class">MobileCart\CoreBundle\EventListener\OrderShipment\OrderShipmentUpdate</parameter>
        <parameter key="cart.listener.order_shipment.insert.class">MobileCart\CoreBundle\EventListener\OrderShipment\OrderShipmentInsert</parameter>
        <parameter key="cart.listener.order_shipment.create.return.class">MobileCart\CoreBundle\EventListener\OrderShipment\OrderShipmentCreateReturn</parameter>
        <parameter key="cart.listener.order_shipment.update.return.class">MobileCart\CoreBundle\EventListener\OrderShipment\OrderShipmentUpdateReturn</parameter>
        <!-- Payment and Shipping Handlers -->
        <parameter key="cart.listener.payment.method.handler.class">MobileCart\CoreBundle\EventListener\Payment\PaymentMethodHandler</parameter>
        <parameter key="cart.listener.shipping_method.search.class">MobileCart\CoreBundle\EventListener\ShippingMethod\ShippingMethodSearch</parameter>
        <parameter key="cart.listener.shipping_method.list.class">MobileCart\CoreBundle\EventListener\ShippingMethod\ShippingMethodList</parameter>
        <parameter key="cart.listener.shipping_method.admin.form.class">MobileCart\CoreBundle\EventListener\ShippingMethod\ShippingMethodAdminForm</parameter>
        <parameter key="cart.listener.shipping_method.new.return.class">MobileCart\CoreBundle\EventListener\ShippingMethod\ShippingMethodNewReturn</parameter>
        <parameter key="cart.listener.shipping_method.create.return.class">MobileCart\CoreBundle\EventListener\ShippingMethod\ShippingMethodCreateReturn</parameter>
        <parameter key="cart.listener.shipping_method.insert.class">MobileCart\CoreBundle\EventListener\ShippingMethod\ShippingMethodInsert</parameter>
        <parameter key="cart.listener.shipping_method.edit.return.class">MobileCart\CoreBundle\EventListener\ShippingMethod\ShippingMethodEditReturn</parameter>
        <parameter key="cart.listener.shipping_method.update.return.class">MobileCart\CoreBundle\EventListener\ShippingMethod\ShippingMethodUpdateReturn</parameter>
        <parameter key="cart.listener.shipping_method.delete.class">MobileCart\CoreBundle\EventListener\ShippingMethod\ShippingMethodDelete</parameter>
        <parameter key="cart.listener.shipping_rate.flatrate.class">MobileCart\CoreBundle\Shipping\FlatRate</parameter>
        <parameter key="cart.listener.shipping_rate.db.class">MobileCart\CoreBundle\Shipping\DB</parameter>
        <!-- URL Rewrite Admin Handlers -->
        <parameter key="cart.listener.url_rewrite.search.class">MobileCart\CoreBundle\EventListener\UrlRewrite\UrlRewriteSearch</parameter>
        <parameter key="cart.listener.url_rewrite.list.class">MobileCart\CoreBundle\EventListener\UrlRewrite\UrlRewriteList</parameter>
        <parameter key="cart.listener.url_rewrite.edit.return.class">MobileCart\CoreBundle\EventListener\UrlRewrite\UrlRewriteEditReturn</parameter>
        <parameter key="cart.listener.url_rewrite.new.return.class">MobileCart\CoreBundle\EventListener\UrlRewrite\UrlRewriteNewReturn</parameter>
        <parameter key="cart.listener.url_rewrite.create.return.class">MobileCart\CoreBundle\EventListener\UrlRewrite\UrlRewriteCreateReturn</parameter>
        <parameter key="cart.listener.url_rewrite.update.return.class">MobileCart\CoreBundle\EventListener\UrlRewrite\UrlRewriteUpdateReturn</parameter>
        <parameter key="cart.listener.url_rewrite.update.class">MobileCart\CoreBundle\EventListener\UrlRewrite\UrlRewriteUpdate</parameter>
        <parameter key="cart.listener.url_rewrite.insert.class">MobileCart\CoreBundle\EventListener\UrlRewrite\UrlRewriteInsert</parameter>
        <parameter key="cart.listener.url_rewrite.delete.class">MobileCart\CoreBundle\EventListener\UrlRewrite\UrlRewriteDelete</parameter>
        <parameter key="cart.listener.url_rewrite.admin.form.class">MobileCart\CoreBundle\EventListener\UrlRewrite\UrlRewriteAdminForm</parameter>
        <parameter key="cart.listener.webhook_log.insert.class">MobileCart\CoreBundle\EventListener\WebhookLog\WebhookLogInsert</parameter>
    </parameters>

    <services>

        <!-- ReCaptcha Verification Service -->
        <service id="cart.recaptcha" lazy="true" class="%cart.recaptcha.class%">
            <call method="setPrivateKey">
                <argument type="string">%recaptcha.key.secret%</argument>
            </call>
            <call method="setPublicKey">
                <argument type="string">%recaptcha.key.site%</argument>
            </call>
        </service>

        <!-- Homepage Listener -->
        <service id="cart.listener.home.view.return" lazy="true" class="%cart.listener.home.view.return.class%">
            <tag name="kernel.event_listener" event="home.view.return" method="onHomeViewReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setSearchService">
                <argument type="service" id="cart.search" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
        </service>

        <!-- Dashboard Listeners -->
        <service id="cart.listener.dashboard.view.return" lazy="true" class="%cart.listener.dashboard.view.return.class%">
            <tag name="kernel.event_listener" event="dashboard.view.return" method="onDashboardViewReturn" priority="10" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
        </service>

        <!-- Login Listener -->
        <service id="cart.listener.login" lazy="true" class="%cart.listener.login.class%">
            <argument type="service" id="security.http_utils" />
            <call method="setEventDispatcher">
                <argument type="service" id="event_dispatcher" />
            </call>
            <call method="setCartSessionService">
                <argument type="service" id="cart.session" />
            </call>
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setReloadCart">
                <argument type="string">%cart.customer.login.reload.cart%</argument>
            </call>
        </service>

        <!-- Login Failed Listener -->
        <service id="cart.listener.login.failed" lazy="true" class="%cart.listener.login.failed.class%">
            <tag name="monolog.logger" channel="security" />
            <argument type="service" id="http_kernel" />
            <argument type="service" id="security.http_utils" />
            <argument type="collection" /> <!-- Options -->
            <argument type="service" id="logger" on-invalid="null" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setEventDispatcher">
                <argument type="service" id="event_dispatcher" />
            </call>
        </service>

        <!-- Logout Listener -->
        <service id="cart.listener.logout" lazy="true" class="%cart.listener.logout.class%">
            <argument type="service" id="security.http_utils" />
            <argument>/</argument>
            <call method="setCartSessionService">
                <argument type="service" id="cart.session" />
            </call>
            <call method="setEventDispatcher">
                <argument type="service" id="event_dispatcher" />
            </call>
        </service>

        <!-- Guard Auth Service -->
        <service id="cart.auth.token" class="%cart.auth.token.class%">
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setAllowAdminLogin">
                <argument type="string">%cart.auth.token.allow.admin%</argument>
            </call>
        </service>

        <!-- Currency Service -->
        <service id="cart.currency" lazy="true" class="%cart.currency.class%">
            <call method="setBaseCurrency">
                <argument type="string">%cart.config.currency.base%</argument>
            </call>
            <call method="addRate">
                <argument type="string">USD/EUR</argument>
                <argument type="string">0.92</argument>
                <argument type="string">4</argument>
                <argument type="string">.</argument>
                <argument type="string">,</argument>
                <argument type="string">-1</argument>
            </call>
        </service>

        <!-- Locale Service -->
        <service id="cart.locale" lazy="true" class="%cart.locale.class%">
            <call method="setDefaultLocale">
                <argument type="string">%locale%</argument>
            </call>
            <call method="addLocale">
                <argument type="string">%locale%</argument>
            </call>
        </service>

        <!-- Menu Service -->
        <service id="cart.menu" lazy="true" class="%cart.menu.class%">
            <call method="setEventDispatcher">
                <argument type="service" id="event_dispatcher" />
            </call>
        </service>

        <!-- Theme Rendering Service -->
        <service id="cart.theme" lazy="true" class="%cart.theme.class%">
            <call method="setTemplating">
                <argument type="service" id="templating" />
            </call>
            <call method="setThemeConfig">
                <argument type="service" id="cart.theme.config" />
            </call>
        </service>

        <!-- Theme Config : (de-coupled from cart.theme to avoid circular references) -->
        <service id="cart.theme.config" lazy="true" class="%cart.theme.config.class%">
            <call method="addAdminEditRoute">
                <argument type="string">category</argument>
                <argument type="string">cart_admin_category_edit</argument>
            </call>
            <call method="addAdminEditRoute">
                <argument type="string">config_setting</argument>
                <argument type="string">cart_admin_config_setting_edit</argument>
            </call>
            <call method="addAdminEditRoute">
                <argument type="string">content</argument>
                <argument type="string">cart_admin_content_edit</argument>
            </call>
            <call method="addAdminEditRoute">
                <argument type="string">customer</argument>
                <argument type="string">cart_admin_customer_edit</argument>
            </call>
            <call method="addAdminEditRoute">
                <argument type="string">customer_address</argument>
                <argument type="string">cart_admin_customer_address_edit</argument>
            </call>
            <call method="addAdminEditRoute">
                <argument type="string">discount</argument>
                <argument type="string">cart_admin_discount_edit</argument>
            </call>
            <call method="addAdminEditRoute">
                <argument type="string">item_var</argument>
                <argument type="string">cart_admin_item_var_edit</argument>
            </call>
            <call method="addAdminEditRoute">
                <argument type="string">item_var_option_datetime</argument>
                <argument type="string">cart_admin_item_var_option_edit</argument>
            </call>
            <call method="addAdminEditRoute">
                <argument type="string">item_var_option_decimal</argument>
                <argument type="string">cart_admin_item_var_option_edit</argument>
            </call>
            <call method="addAdminEditRoute">
                <argument type="string">item_var_option_int</argument>
                <argument type="string">cart_admin_item_var_option_edit</argument>
            </call>
            <call method="addAdminEditRoute">
                <argument type="string">item_var_option_text</argument>
                <argument type="string">cart_admin_item_var_option_edit</argument>
            </call>
            <call method="addAdminEditRoute">
                <argument type="string">item_var_option_varchar</argument>
                <argument type="string">cart_admin_item_var_option_edit</argument>
            </call>
            <call method="addAdminEditRoute">
                <argument type="string">item_var_set</argument>
                <argument type="string">cart_admin_item_var_set_edit</argument>
            </call>
            <call method="addAdminEditRoute">
                <argument type="string">item_var_set_var</argument>
                <argument type="string">cart_admin_item_var_set_var_edit</argument>
            </call>
            <call method="addAdminEditRoute">
                <argument type="string">order</argument>
                <argument type="string">cart_admin_order_edit</argument>
            </call>
            <call method="addAdminEditRoute">
                <argument type="string">order_shipment</argument>
                <argument type="string">cart_admin_order_shipment_edit</argument>
            </call>
            <call method="addAdminEditRoute">
                <argument type="string">product</argument>
                <argument type="string">cart_admin_product_edit</argument>
            </call>
            <call method="addAdminEditRoute">
                <argument type="string">shipping_method</argument>
                <argument type="string">cart_admin_shipping_method_edit</argument>
            </call>
            <call method="addAdminEditRoute">
                <argument type="string">url_rewrite</argument>
                <argument type="string">cart_admin_url_rewrite_edit</argument>
            </call>
        </service>

        <!-- Twig Extension -->
        <service id="cart.twig.frontend" lazy="true" class="%cart.twig.frontend.class%">
            <tag name="twig.extension" />
            <call method="setSession">
                <argument type="service" id="session" />
            </call>
            <call method="setIsProduction">
                <argument type="string">%cart.is_production%</argument><!-- Use this for Google Analytics, etc -->
            </call>
            <call method="setCurrencyService">
                <argument type="service" id="cart.currency" />
            </call>
            <call method="setCartSessionService">
                <argument type="service" id="cart.session" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
            <call method="setThemeConfig">
                <argument type="service" id="cart.theme.config" />
            </call>
            <call method="setImageService">
                <argument type="service" id="cart.image" />
            </call>
            <call method="setMenuService">
                <argument type="service" id="cart.menu" />
            </call>
        </service>

        <!-- Order Service -->
        <service id="cart.order" lazy="true" class="%cart.order.class%">
            <call method="setEventDispatcher">
                <argument type="service" id="event_dispatcher" />
            </call>
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setCartService">
                <argument type="service" id="cart" />
            </call>
            <call method="setPaymentService">
                <argument type="service" id="cart.payment" />
            </call>
            <call method="setEnableCreateInvoice">
                <argument type="string">%cart.order.invoice.enabled%</argument>
            </call>
            <call method="setEnableCreatePayment">
                <argument type="string">%cart.order.payment.enabled%</argument>
            </call>
            <call method="setEnableCreateShipment">
                <argument type="string">%cart.shipping.enabled%</argument>
            </call>
            <call method="setShipmentIsPaidFlag">
                <argument type="string">%cart.shipping.total.enabled%</argument>
            </call>
            <call method="setOrderReferenceOffset">
                <argument type="string">%cart.order.reference.offset%</argument>
            </call>
            <call method="addStatusOption">
                <argument type="string">10</argument>
                <argument type="string">processing</argument>
                <argument type="string">Processing</argument>
            </call>
            <call method="addStatusOption">
                <argument type="string">20</argument>
                <argument type="string">partially_shipped</argument>
                <argument type="string">Partially Shipped</argument>
            </call>
            <call method="addStatusOption">
                <argument type="string">30</argument>
                <argument type="string">shipped</argument>
                <argument type="string">Shipped</argument>
            </call>
            <call method="addStatusOption">
                <argument type="string">40</argument>
                <argument type="string">canceled</argument>
                <argument type="string">Canceled</argument>
            </call>
        </service>

        <!-- Cart Service : (mostly) de-coupled from cart.session for API handling (APIs dont have cookies) -->
        <service id="cart" lazy="true" class="%cart.class%">
            <call method="setCartTotalService">
                <argument type="service" id="cart.total" />
            </call>
            <call method="setShippingService">
                <argument type="service" id="cart.shipping" />
            </call>
            <call method="setTaxService">
                <argument type="service" id="cart.tax" />
            </call>
            <call method="setGeographyService">
                <argument type="service" id="cart.geography" />
            </call>
            <call method="setDiscountService">
                <argument type="service" id="cart.discount" />
            </call>
            <call method="setAllowedCountryIds">
                <argument type="string">%cart.allowed.country.ids%</argument>
            </call>
            <call method="setAllowGuestCheckout">
                <argument type="string">%cart.allow.guest.checkout%</argument>
            </call>
            <call method="setIsSpaEnabled">
                <argument type="string">%cart.checkout.spa.enabled%</argument>
            </call>
        </service>

        <!-- Cart Session Service -->
        <service id="cart.session" lazy="true" class="%cart.session.class%">
            <call method="setSession">
                <argument type="service" id="session" />
            </call>
            <call method="setCartService">
                <argument type="service" id="cart" />
            </call>
            <call method="setLogger">
                <argument type="service" id="logger" />
            </call>
        </service>

        <!-- Checkout Session/Config Service -->
        <service id="cart.checkout.session" lazy="true" class="%cart.checkout.session.class%">
            <call method="setCartSessionService">
                <argument type="service" id="cart.session" />
            </call>
            <call method="setOrderService">
                <argument type="service" id="cart.order" />
            </call>
        </service>

        <!-- Tax Service -->
        <service id="cart.tax" lazy="true" class="%cart.tax.class%">
            <call method="setIsTaxEnabled">
                <argument type="string">%cart.tax.enabled%</argument>
            </call>
        </service>

        <!-- Shipping Service : Rate Collector -->
        <service id="cart.shipping" lazy="true" class="%cart.shipping.class%">
            <call method="setIsShippingEnabled">
                <argument type="string">%cart.shipping.enabled%</argument>
            </call>
            <call method="setIsCollectTotalEnabled">
                <argument type="string">%cart.shipping.total.enabled%</argument>
            </call>
            <call method="setIsMultiShippingEnabled">
                <argument type="string">%cart.shipping.multi.enabled%</argument>
            </call>
            <call method="setEventDispatcher">
                <argument type="service" id="event_dispatcher" />
            </call>
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setSourceAddress">
                <argument type="string">%cart.shipping.src.key%</argument>
                <argument type="string">%cart.shipping.src.label%</argument>
                <argument type="string">%cart.shipping.src.street%</argument>
                <argument type="string">%cart.shipping.src.city%</argument>
                <argument type="string">%cart.shipping.src.province%</argument>
                <argument type="string">%cart.shipping.src.postcode%</argument>
                <argument type="string">%cart.shipping.src.country%</argument>
            </call>
        </service>

        <!-- Event Listener: build billing address form -->
        <service id="cart.listener.checkout.form.billing.address" lazy="true" class="%cart.listener.checkout.form.billing.address.class%">
            <tag name="kernel.event_listener" event="checkout.form" method="onCheckoutForm" priority="100" />
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
            <call method="setCheckoutSessionService">
                <argument type="service" id="cart.checkout.session" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
        </service>

        <!-- Event Listener: build shipping address form -->
        <service id="cart.listener.checkout.form.shipping.address" lazy="true" class="%cart.listener.checkout.form.shipping.address.class%">
            <tag name="kernel.event_listener" event="checkout.form" method="onCheckoutForm" priority="90" />
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
            <call method="setCheckoutSessionService">
                <argument type="service" id="cart.checkout.session" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
        </service>

        <!-- Event Listener: build payment form -->
        <service id="cart.listener.checkout.form.payment_methods" lazy="true" class="%cart.listener.checkout.form.payment_methods.class%">
            <tag name="kernel.event_listener" event="checkout.form" method="onCheckoutForm" priority="80" />
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
            <call method="setPaymentService">
                <argument type="service" id="cart.payment" />
            </call>
            <call method="setCheckoutSessionService">
                <argument type="service" id="cart.checkout.session" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
        </service>

        <!-- Event Listener: Finish building checkout form -->
        <service id="cart.listener.checkout.form" lazy="true" class="%cart.listener.checkout.form.class%">
            <tag name="kernel.event_listener" event="checkout.form" method="onCheckoutForm" priority="50" />
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
            <call method="setPaymentService">
                <argument type="service" id="cart.payment" />
            </call>
            <call method="setCheckoutSessionService">
                <argument type="service" id="cart.checkout.session" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
        </service>

        <!-- Event Listener: return view data for checkout -->
        <service id="cart.listener.checkout.view.return" lazy="true" class="%cart.listener.checkout.view.return.class%">
            <tag name="kernel.event_listener" event="checkout.view.return" method="onCheckoutViewReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
            <call method="setPaymentService">
                <argument type="service" id="cart.payment" />
            </call>
            <call method="setCartSession">
                <argument type="service" id="cart.session" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>

        <!-- Event Listener: update/validate billing address in checkout -->
        <service id="cart.listener.checkout.update.billing.address" lazy="true" class="%cart.listener.checkout.update.billing.address.class%">
            <tag name="kernel.event_listener" event="checkout.update.billing.address" method="onCheckoutUpdateBillingAddress" priority="50" />
            <call method="setCheckoutSessionService">
                <argument type="service" id="cart.checkout.session" />
            </call>
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setSecurityPasswordEncoder">
                <argument type="service" id="security.password_encoder" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
            <call method="setLogger">
                <argument type="service" id="logger" />
            </call>
        </service>

        <!-- Event Listener: render Totals and Discounts section of checkout -->
        <service id="cart.listener.checkout.totals.discounts" lazy="true" class="%cart.listener.checkout.totals.discounts.class%">
            <tag name="kernel.event_listener" event="checkout.totals.discounts" method="onCheckoutTotalsDiscounts" priority="50" />
            <call method="setCheckoutSessionService">
                <argument type="service" id="cart.checkout.session" />
            </call>
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
        </service>

        <!-- Event Listener: render Order Confirmation step/modal -->
        <service id="cart.listener.checkout.confirm.order" lazy="true" class="%cart.listener.checkout.confirm.order.class%">
            <tag name="kernel.event_listener" event="checkout.confirm.order" method="onCheckoutConfirmOrder" priority="50" />
            <call method="setCheckoutSessionService">
                <argument type="service" id="cart.checkout.session" />
            </call>
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
        </service>

        <!-- Event Listener: render Payment Methods section of checkout, only in multi-page mode -->
        <service id="cart.listener.checkout.payment.methods.view.return" lazy="true" class="%cart.listener.checkout.payment.methods.view.return.class%">
            <tag name="kernel.event_listener" event="checkout.payment.methods.view.return" method="onCheckoutPaymentMethodsViewReturn" priority="50" />
            <call method="setCheckoutSessionService">
                <argument type="service" id="cart.checkout.session" />
            </call>
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
            <call method="setPaymentService">
                <argument type="service" id="cart.payment" />
            </call>
        </service>

        <!-- Event Listener: after billing address is updated, collect payment methods, set to session, set to form -->
        <service id="cart.listener.checkout.update.payment.methods" lazy="true" class="%cart.listener.checkout.update.payment.methods.class%">
            <tag name="kernel.event_listener" event="checkout.update.billing.address" method="onCheckoutUpdateBillingAddress" priority="40" />
            <call method="setCheckoutSessionService">
                <argument type="service" id="cart.checkout.session" />
            </call>
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setPaymentService">
                <argument type="service" id="cart.payment" />
            </call>
        </service>

        <!-- Event Listener: update/validate shipping address in checkout -->
        <service id="cart.listener.checkout.update.shipping.address" lazy="true" class="%cart.listener.checkout.update.shipping.address.class%">
            <tag name="kernel.event_listener" event="checkout.update.shipping.address" method="onCheckoutUpdateShippingAddress" priority="50" />
            <call method="setCheckoutSessionService">
                <argument type="service" id="cart.checkout.session" />
            </call>
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setLogger">
                <argument type="service" id="logger" />
            </call>
        </service>

        <!-- Event Listener: update/validate shipping method in checkout -->
        <service id="cart.listener.checkout.update.shipping.method" lazy="true" class="%cart.listener.checkout.update.shipping.method.class%">
            <tag name="kernel.event_listener" event="checkout.update.shipping.method" method="onCheckoutUpdateShippingMethod" priority="50" />
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
            <call method="setCheckoutSessionService">
                <argument type="service" id="cart.checkout.session" />
            </call>
        </service>

        <!-- Event Listener: update/validate cart changes, totals, discounts being submitted in checkout -->
        <service id="cart.listener.checkout.update.totals.discounts" lazy="true" class="%cart.listener.checkout.update.totals.discounts.class%">
            <tag name="kernel.event_listener" event="checkout.update.totals.discounts" method="onCheckoutUpdateTotalsDiscounts" priority="50" />
            <call method="setCheckoutSessionService">
                <argument type="service" id="cart.checkout.session" />
            </call>
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>

        <!-- Event Listener: update/validate payment data in checkout (prior to payment capture) -->
        <service id="cart.listener.checkout.update.payment.method" lazy="true" class="%cart.listener.checkout.update.payment.method.class%">
            <tag name="kernel.event_listener" event="checkout.update.payment.method" method="onCheckoutUpdatePaymentMethod" priority="50" />
            <call method="setCheckoutSessionService">
                <argument type="service" id="cart.checkout.session" />
            </call>
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>

        <!-- Event Listener: Submit Order via Checkout Form -->
        <service id="cart.listener.checkout.submit.order" lazy="true" class="%cart.listener.checkout.submit.order.class%">
            <tag name="kernel.event_listener" event="checkout.submit.order" method="onCheckoutSubmitOrder" priority="50" />
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
            <call method="setCheckoutSessionService">
                <argument type="service" id="cart.checkout.session" />
            </call>
            <call method="setOrderService">
                <argument type="service" id="cart.order" />
            </call>
        </service>

        <!-- Event Listener : Build View Data for Checkout Success page, and clear cart -->
        <service id="cart.listener.checkout.success.return" lazy="true" class="%cart.listener.checkout.success.return.class%">
            <tag name="kernel.event_listener" event="checkout.success.return" method="onCheckoutSuccessReturn" priority="50" />
            <call method="setCheckoutSessionService">
                <argument type="service" id="cart.checkout.session" />
            </call>
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
        </service>

        <!-- Event Listener: Shipping Method : Flat Rate -->
        <service id="cart.listener.shipping_rate.flatrate" lazy="true" class="%cart.listener.shipping_rate.flatrate.class%">
            <tag name="kernel.event_listener" event="shipping_rate.collect" method="onShippingRateCollect" priority="50" />
            <call method="setIsEnabled">
                <argument type="string">%cart.shipping.flatrate.enabled%</argument>
            </call>
            <call method="set">
                <argument type="string">id</argument>
                <argument type="string">Standard_Method</argument><!-- avoid numerical values here -->
            </call>
            <call method="set">
                <argument type="string">price</argument>
                <argument type="string">5.00</argument>
            </call>
            <call method="set">
                <argument type="string">company</argument>
                <argument type="string">Standard</argument>
            </call>
            <call method="set">
                <argument type="string">method</argument>
                <argument type="string">Method</argument>
            </call>
        </service>

        <!-- Event Listener: Shipping Methods from Database (example: Flat Rate can be imported and have conditions saved/edited) in admin -->
        <service id="cart.listener.shipping_rate.db" lazy="true" class="%cart.listener.shipping_rate.db.class%">
            <tag name="kernel.event_listener" event="shipping_rate.collect" method="onShippingRateCollect" priority="60" />
            <call method="setIsEnabled">
                <argument type="string">%cart.shipping.flatrate.db.enabled%</argument>
            </call>
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>

        <!-- Image Service / Manager -->
        <service id="cart.image" lazy="true" class="%cart.image.class%">
            <call method="addImageUploadPath">
                <argument>product</argument>
                <argument>./bundles/mobilecartcore/uploads/product/</argument>
            </call>
            <call method="addImageUploadPath">
                <argument>category</argument>
                <argument>./bundles/mobilecartcore/uploads/category/</argument>
            </call>
            <call method="addImageUploadPath">
                <argument>content</argument>
                <argument>./bundles/mobilecartcore/uploads/content/</argument>
            </call>
            <call method="addImageUploadPath">
                <argument>cart_item</argument>
                <argument>./bundles/mobilecartcore/uploads/cart_item/</argument>
            </call>
            <call method="addImageConfig">
                <argument>product</argument>
                <argument>list_grid</argument>
                <argument>500</argument>
                <argument>500</argument>
                <argument>bundles/mobilecartfrontend/images/500x500.png</argument>
            </call>
            <call method="addImageConfig">
                <argument>category</argument>
                <argument>view_jumbo</argument>
                <argument>800</argument>
                <argument>300</argument>
                <argument>bundles/mobilecartfrontend/images/800x300.gif</argument>
            </call>
            <call method="addImageConfig">
                <argument>category</argument>
                <argument>list_grid</argument>
                <argument>320</argument>
                <argument>150</argument>
                <argument>bundles/mobilecartfrontend/images/800x300.gif</argument>
            </call>
            <call method="addImageConfig">
                <argument>content</argument>
                <argument>view_jumbo</argument>
                <argument>800</argument>
                <argument>300</argument>
                <argument>bundles/mobilecartfrontend/images/800x300.gif</argument>
            </call>
            <call method="addImageConfig">
                <argument>content</argument>
                <argument>list_grid</argument>
                <argument>320</argument>
                <argument>150</argument>
                <argument>bundles/mobilecartfrontend/images/800x300.gif</argument>
            </call>
        </service>

        <!-- Entity Manager Service : MySQL / Doctrine (could potentially be replaced with any kind of Model) -->
        <service id="cart.entity" lazy="true" class="%cart.entity.class%">
            <call method="setDoctrine">
                <argument type="service" id="doctrine" />
            </call>
            <call method="setCartSessionService">
                <argument type="service" id="cart.session" />
            </call>
            <call method="addProductType">
                <argument>1</argument>
                <argument>Simple</argument>
            </call>
            <call method="addProductType">
                <argument>2</argument>
                <argument>Configurable</argument>
            </call>
            <!--
            <call method="addProductType">
                <argument>3</argument>
                <argument>Group</argument>
            </call>
            <call method="addProductType">
                <argument>4</argument>
                <argument>Bundle</argument>
            </call>
            -->
            <call method="addObjectRepository">
                <argument>item_var</argument>
                <argument>%cart.repo.item_var%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>item_var_set</argument>
                <argument>%cart.repo.item_var_set%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>item_var_set_var</argument>
                <argument>%cart.repo.item_var_set_var%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>item_var_option_datetime</argument>
                <argument>%cart.repo.item_var_option_datetime%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>item_var_option_decimal</argument>
                <argument>%cart.repo.item_var_option_decimal%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>item_var_option_int</argument>
                <argument>%cart.repo.item_var_option_int%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>item_var_option_varchar</argument>
                <argument>%cart.repo.item_var_option_varchar%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>item_var_option_text</argument>
                <argument>%cart.repo.item_var_option_text%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>admin_user</argument>
                <argument>%cart.repo.admin_user%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>cart</argument>
                <argument>%cart.repo.cart%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>cart_item</argument>
                <argument>%cart.repo.cart_item%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>category</argument>
                <argument>%cart.repo.category%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>category_image</argument>
                <argument>%cart.repo.category_image%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>category_product</argument>
                <argument>%cart.repo.category_product%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>category_var_value_datetime</argument>
                <argument>%cart.repo.category_var_value_datetime%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>category_var_value_decimal</argument>
                <argument>%cart.repo.category_var_value_decimal%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>category_var_value_int</argument>
                <argument>%cart.repo.category_var_value_int%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>category_var_value_text</argument>
                <argument>%cart.repo.category_var_value_text%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>category_var_value_varchar</argument>
                <argument>%cart.repo.category_var_value_varchar%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>category_product</argument>
                <argument>%cart.repo.category_product%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>config_setting</argument>
                <argument>%cart.repo.config_setting%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>content</argument>
                <argument>%cart.repo.content%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>content_image</argument>
                <argument>%cart.repo.content_image%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>content_slot</argument>
                <argument>%cart.repo.content_slot%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>content_var_value_datetime</argument>
                <argument>%cart.repo.content_var_value_datetime%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>content_var_value_decimal</argument>
                <argument>%cart.repo.content_var_value_decimal%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>content_var_value_int</argument>
                <argument>%cart.repo.content_var_value_int%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>content_var_value_text</argument>
                <argument>%cart.repo.content_var_value_text%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>content_var_value_varchar</argument>
                <argument>%cart.repo.content_var_value_varchar%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>customer</argument>
                <argument>%cart.repo.customer%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>customer_address</argument>
                <argument>%cart.repo.customer_address%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>customer_group_product_price</argument>
                <argument>%cart.repo.customer_group_product_price%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>customer_token</argument>
                <argument>%cart.repo.customer_token%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>customer_var_value_datetime</argument>
                <argument>%cart.repo.customer_var_value_datetime%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>customer_var_value_decimal</argument>
                <argument>%cart.repo.customer_var_value_decimal%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>customer_var_value_int</argument>
                <argument>%cart.repo.customer_var_value_int%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>customer_var_value_text</argument>
                <argument>%cart.repo.customer_var_value_text%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>customer_var_value_varchar</argument>
                <argument>%cart.repo.customer_var_value_varchar%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>discount</argument>
                <argument>%cart.repo.discount%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>object_log</argument>
                <argument>%cart.repo.object_log%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>order</argument>
                <argument>%cart.repo.order%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>order_var_value_datetime</argument>
                <argument>%cart.repo.order_var_value_datetime%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>order_var_value_decimal</argument>
                <argument>%cart.repo.order_var_value_decimal%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>order_var_value_int</argument>
                <argument>%cart.repo.order_var_value_int%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>order_var_value_text</argument>
                <argument>%cart.repo.order_var_value_text%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>order_var_value_varchar</argument>
                <argument>%cart.repo.order_var_value_varchar%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>order_item</argument>
                <argument>%cart.repo.order_item%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>order_shipment</argument>
                <argument>%cart.repo.order_shipment%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>order_invoice</argument>
                <argument>%cart.repo.order_invoice%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>order_payment</argument>
                <argument>%cart.repo.order_payment%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>order_refund</argument>
                <argument>%cart.repo.order_refund%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>product</argument>
                <argument>%cart.repo.product%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>product_config</argument>
                <argument>%cart.repo.product_config%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>product_image</argument>
                <argument>%cart.repo.product_image%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>product_tier_price</argument>
                <argument>%cart.repo.product_tier_price%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>product_var_value_datetime</argument>
                <argument>%cart.repo.product_var_value_datetime%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>product_var_value_decimal</argument>
                <argument>%cart.repo.product_var_value_decimal%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>product_var_value_int</argument>
                <argument>%cart.repo.product_var_value_int%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>product_var_value_text</argument>
                <argument>%cart.repo.product_var_value_text%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>product_var_value_varchar</argument>
                <argument>%cart.repo.product_var_value_varchar%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>ref_country_region</argument>
                <argument>%cart.repo.ref_country_region%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>search_term</argument>
                <argument>%cart.repo.search_term%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>shipping_method</argument>
                <argument>%cart.repo.shipping_method%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>url_rewrite</argument>
                <argument>%cart.repo.url_rewrite%</argument>
            </call>
            <call method="addObjectRepository">
                <argument>webhook_log</argument>
                <argument>%cart.repo.webhook_log%</argument>
            </call>
        </service>

        <!-- PDO-based Entity Service -->
        <service id="cart.entity.pdo" lazy="true" class="%cart.entity.pdo.class%">
            <call method="setCartSessionService">
                <argument type="service" id="cart.session" />
            </call>
        </service>

        <!-- Export Service -->
        <service id="cart.export" lazy="true" class="%cart.export.class%">
            <call method="setEventDispatcher">
                <argument type="service" id="event_dispatcher" />
            </call>
        </service>
        <!-- Export Form Type -->
        <service id="cart.form.type.export_options" lazy="true" class="%cart.form.type.export_options.class%">
            <tag name="form.type" />
            <call method="setExportService">
                <argument type="service" id="cart.export" />
            </call>
        </service>
        <!-- Event Listener : Admin landing page -->
        <service id="cart.listener.export_options.view.return" lazy="true" class="%cart.listener.export_options.view.return.class%">
            <tag name="kernel.event_listener" event="export_options.view.return" method="onExportOptionsViewReturn" priority="50" />
            <call method="setFormTypeClass">
                <argument type="string">%cart.form.type.export_options.class%</argument>
            </call>
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <!-- Event Listener : Run Export -->
        <service id="cart.listener.export.run" lazy="true" class="%cart.listener.export.run.class%">
            <tag name="kernel.event_listener" event="export.run" method="onExportRun" priority="50" />
            <call method="setFormTypeClass">
                <argument type="string">%cart.form.type.export_options.class%</argument>
            </call>
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
            <call method="setExportService">
                <argument type="service" id="cart.export" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>

        <!-- Event Listener -->
        <service id="cart.listener.export.order_item" lazy="true" class="%cart.listener.export.order_item.class%">
            <tag name="kernel.event_listener" event="export_options.collect" method="onExportOptionsCollect" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>

        <!-- Dynamic Search Service : gets a new instance every time (Multi-Instance) -->
        <service id="cart.search" lazy="true" shared="false" class="%cart.search.class%">
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>

        <!-- Search Service for Doctrine (Singleton) -->
        <service id="cart.search.doctrine" lazy="true" class="%cart.search.doctrine.class%">
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>

        <!-- Frontend Search Service (Singleton) : can use this for switching between MySQL, ElasticSearch, and libraries -->
        <service id="cart.search.frontend" lazy="true" class="%cart.search.frontend.class%">
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>

        <!-- Admin Search Service (Singleton) : can use this for switching between MySQL, ElasticSearch, and libraries -->
        <service id="cart.search.admin" lazy="true" class="%cart.search.admin.class%">
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>

        <!-- Discount Service -->
        <service id="cart.discount" lazy="true" class="%cart.discount.class%">
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setIsDiscountEnabled">
                <argument type="string">%cart.discount.enabled%</argument>
            </call>
        </service>

        <!-- Geography Service -->
        <service id="cart.geography" lazy="true" class="%cart.geography.class%">
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>

        <!-- Payment Service : Collect Payment Method Services -->
        <service id="cart.payment" lazy="true" class="%cart.payment.class%">
            <call method="setEventDispatcher">
                <argument type="service" id="event_dispatcher" />
            </call>
        </service>

        <!-- Cart Total Service -->
        <service id="cart.total" lazy="true" class="%cart.total.class%">
            <call method="setEventDispatcher">
                <argument type="service" id="event_dispatcher" />
            </call>
            <call method="setCurrencyService">
                <argument type="service" id="cart.currency" />
            </call>
            <call method="setApplyAutoDiscounts">
                <argument type="string">%cart.total.discount.auto%</argument>
            </call>
        </service>

        <!-- Event Listener: Return view data to Cart View page -->
        <service id="cart.listener.cart.view.return" lazy="true" class="%cart.listener.cart.view.return.class%">
            <tag name="kernel.event_listener" event="cart.view.return" method="onCartViewReturn" priority="50" />
            <call method="setCartSessionService">
                <argument type="service" id="cart.session" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
        </service>

        <!-- Event Listener: Add Product to Cart : from a User Session, not for APIs -->
        <service id="cart.listener.cart.add.product" lazy="true" class="%cart.listener.cart.add.product.class%">
            <tag name="kernel.event_listener" event="cart.add.product" method="onCartAddProduct" priority="50" />
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
            <call method="setCartSessionService">
                <argument type="service" id="cart.session" />
            </call>
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setRedirectToCart">
                <argument type="string">%cart.add.product.redirect.cart%</argument>
            </call>
            <call method="setEnableQtyCheck">
                <argument type="string">%cart.add.product.enable.qty.check%</argument>
            </call>
        </service>

        <!-- Event Listener: Update Totals and Shipping -->
        <service id="cart.listener.cart.update.totals.shipping" lazy="true" class="%cart.listener.cart.update.totals.shipping.class%">
            <tag name="kernel.event_listener" event="cart.add.product" method="onUpdateTotalsShipping" priority="10" />
            <tag name="kernel.event_listener" event="cart.remove.product" method="onUpdateTotalsShipping" priority="10" />
            <tag name="kernel.event_listener" event="cart.remove.products" method="onUpdateTotalsShipping" priority="10" />
            <tag name="kernel.event_listener" event="cart.add.shipment" method="onUpdateTotalsShipping" priority="10" />
            <tag name="kernel.event_listener" event="cart.add.discount" method="onUpdateTotalsShipping" priority="10" />
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
            <call method="setCartSessionService">
                <argument type="service" id="cart.session" />
            </call>
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setLogger">
                <argument type="service" id="logger" />
            </call>
        </service>

        <!-- Event Listener: Add Product to Cart : from a User Session, not for APIs -->
        <service id="cart.listener.cart.addtocart.product.form" lazy="true" class="%cart.listener.cart.addtocart.product.form.class%">
            <tag name="kernel.event_listener" event="product.addtocart.form" method="onProductAddToCartForm" priority="50" />
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
        </service>

        <!-- Event Listener: Remove Product from Cart : from a User Session, not for APIs -->
        <service id="cart.listener.cart.remove.product" lazy="true" class="%cart.listener.cart.remove.product.class%">
            <tag name="kernel.event_listener" event="cart.remove.product" method="onCartRemoveProduct" priority="50" />
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
            <call method="setCartSessionService">
                <argument type="service" id="cart.session" />
            </call>
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>

        <!-- Event Listener: Remove all Products from Cart : from a User Session, not for APIs -->
        <service id="cart.listener.cart.remove.products" lazy="true" class="%cart.listener.cart.remove.products.class%">
            <tag name="kernel.event_listener" event="cart.remove.products" method="onCartRemoveProducts" priority="50" />
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
            <call method="setCartSessionService">
                <argument type="service" id="cart.session" />
            </call>
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>

        <!-- Event Listener: Add Shipment to Cart : from a User Session, not for APIs -->
        <service id="cart.listener.cart.add.shipment" lazy="true" class="%cart.listener.cart.add.shipment.class%">
            <tag name="kernel.event_listener" event="cart.add.shipment" method="onCartAddShipment" priority="50" />
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
            <call method="setCartSessionService">
                <argument type="service" id="cart.session" />
            </call>
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setShippingService">
                <argument type="service" id="cart.shipping" />
            </call>
        </service>

        <!-- Event Listener: Add Discount to Cart : from a User Session, not for APIs -->
        <service id="cart.listener.cart.add.discount" lazy="true" class="%cart.listener.cart.add.discount.class%">
            <tag name="kernel.event_listener" event="cart.add.discount" method="onCartAddDiscount" priority="50" />
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
            <call method="setCartSessionService">
                <argument type="service" id="cart.session" />
            </call>
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>

        <!-- Event Listener: Cart Total : Items/Products -->
        <service id="cart.listener.cart.total.item" lazy="true" class="%cart.listener.cart.total.item.class%">
            <tag name="kernel.event_listener" event="cart.total" method="onCartTotalCollect" priority="90" />
        </service>

        <!-- Event Listener: Cart Total : Shipping -->
        <service id="cart.listener.cart.total.shipping" lazy="true" class="%cart.listener.cart.total.shipping.class%">
            <tag name="kernel.event_listener" event="cart.total" method="onCartTotalCollect" priority="70" />
        </service>

        <!-- Event Listener: Cart Total : Tax -->
        <service id="cart.listener.cart.total.tax" lazy="true" class="%cart.listener.cart.total.tax.class%">
            <tag name="kernel.event_listener" event="cart.total" method="onCartTotalCollect" priority="50" />
            <call method="setTaxService">
                <argument type="service" id="cart.tax" />
            </call>
        </service>

        <!-- Event Listener: Cart Total : Discount -->
        <service id="cart.listener.cart.total.discount" lazy="true" class="%cart.listener.cart.total.discount.class%">
            <tag name="kernel.event_listener" event="cart.total" method="onCartTotalCollect" priority="30" />
            <call method="setDiscountService">
                <argument type="service" id="cart.discount" />
            </call>
        </service>

        <!-- Event Listener: Cart Total : Grand Total -->
        <service id="cart.listener.cart.total.grand" lazy="true" class="%cart.listener.cart.total.grand.class%">
            <tag name="kernel.event_listener" event="cart.total" method="onCartTotalCollect" priority="1" />
        </service>

        <!-- Event Listener : Product Search -->
        <service id="cart.listener.product.search" lazy="true" class="%cart.listener.product.search.class%">
            <tag name="kernel.event_listener" event="product.search" method="onProductSearch" priority="50" />
            <call method="setSearch">
                <argument type="service" id="cart.search.frontend" />
                <argument type="string">product</argument>
            </call>
        </service>

        <!-- Event Listener: Product Listing : for frontend, not for APIs -->
        <service id="cart.listener.product.list" lazy="true" class="%cart.listener.product.list.class%">
            <tag name="kernel.event_listener" event="product.search" method="onProductList" priority="40" />
            <call method="setRouter">
                <argument type="service" id="router"/>
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>

        <!-- Event Listener: Build Product Form in Admin -->
        <service id="cart.listener.product.admin.form" lazy="true" class="%cart.listener.product.admin.form.class%">
            <tag name="kernel.event_listener" event="product.admin.form" method="onProductAdminForm" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setCurrencyService">
                <argument type="service" id="cart.currency" />
            </call>
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
            <call method="setThemeConfig">
                <argument type="service" id="cart.theme.config" />
            </call>
        </service>

        <!-- Event Listener: Return View Data to Admin Product Create page -->
        <service id="cart.listener.product.create.return" lazy="true" class="%cart.listener.product.create.return.class%">
            <tag name="kernel.event_listener" event="product.create.return" method="onProductCreateReturn" priority="50" />
            <call method="setSession">
                <argument type="service" id="session" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.product.update.return" lazy="true" class="%cart.listener.product.update.return.class%">
            <tag name="kernel.event_listener" event="product.update.return" method="onProductUpdateReturn" priority="50" />
            <call method="setSession">
                <argument type="service" id="session" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.product.edit.return" lazy="true" class="%cart.listener.product.edit.return.class%">
            <tag name="kernel.event_listener" event="product.edit.return" method="onProductEditReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setImageService">
                <argument type="service" id="cart.image" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
        </service>
        <service id="cart.listener.product.new.return" lazy="true" class="%cart.listener.product.new.return.class%">
            <tag name="kernel.event_listener" event="product.new.return" method="onProductNewReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setImageService">
                <argument type="service" id="cart.image" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.product.view.return" lazy="true" class="%cart.listener.product.view.return.class%">
            <tag name="kernel.event_listener" event="product.view.return" method="onProductViewReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setImageService">
                <argument type="service" id="cart.image" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
            <call method="setSearch">
                <argument type="service" id="cart.search.frontend" />
                <argument type="string">product</argument>
            </call>
        </service>
        <service id="cart.listener.product.update" lazy="true" class="%cart.listener.product.update.class%">
            <tag name="kernel.event_listener" event="product.update" method="onProductUpdate" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.product.insert" lazy="true" class="%cart.listener.product.insert.class%">
            <tag name="kernel.event_listener" event="product.insert" method="onProductInsert" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.product.delete" lazy="true" class="%cart.listener.product.delete.class%">
            <tag name="kernel.event_listener" event="product.delete" method="onProductDelete" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.product.duplicate" lazy="true" class="%cart.listener.product.duplicate.class%">
            <tag name="kernel.event_listener" event="product.duplicate" method="onProductDuplicate" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>

        <!-- Category Services and Listeners -->
        <service id="cart.listener.category.search" lazy="true" class="%cart.listener.category.search.class%">
            <tag name="kernel.event_listener" event="category.search" method="onCategorySearch" priority="50" />
            <call method="setSearch">
                <argument type="service" id="cart.search.admin" />
                <argument type="string">category</argument>
            </call>
        </service>
        <service id="cart.listener.category.list" lazy="true" class="%cart.listener.category.list.class%">
            <tag name="kernel.event_listener" event="category.search" method="onCategoryList" priority="40" />
            <call method="setRouter">
                <argument type="service" id="router"/>
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.category.create.return" lazy="true" class="%cart.listener.category.create.return.class%">
            <tag name="kernel.event_listener" event="category.create.return" method="onCategoryCreateReturn" priority="50" />
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.category.update.return" lazy="true" class="%cart.listener.category.update.return.class%">
            <tag name="kernel.event_listener" event="category.update.return" method="onCategoryUpdateReturn" priority="50" />
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.category.edit.return" lazy="true" class="%cart.listener.category.edit.return.class%">
            <tag name="kernel.event_listener" event="category.edit.return" method="onCategoryEditReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setImageService">
                <argument type="service" id="cart.image" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
        </service>
        <service id="cart.listener.category.new.return" lazy="true" class="%cart.listener.category.new.return.class%">
            <tag name="kernel.event_listener" event="category.new.return" method="onCategoryNewReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setImageService">
                <argument type="service" id="cart.image" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.category.update" lazy="true" class="%cart.listener.category.update.class%">
            <tag name="kernel.event_listener" event="category.update" method="onCategoryUpdate" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.category.insert" lazy="true" class="%cart.listener.category.insert.class%">
            <tag name="kernel.event_listener" event="category.insert" method="onCategoryInsert" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.category.delete" lazy="true" class="%cart.listener.category.delete.class%">
            <tag name="kernel.event_listener" event="category.delete" method="onCategoryDelete" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.form.type.category" lazy="true" class="%cart.form.type.category.class%">
            <tag name="form.type" />
            <call method="setThemeConfigService">
                <argument type="service" id="cart.theme.config" />
            </call>
        </service>
        <service id="cart.listener.category.admin.form" lazy="true" class="%cart.listener.category.admin.form.class%">
            <tag name="kernel.event_listener" event="category.admin.form" method="onCategoryAdminForm" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
            <call method="setFormTypeClass">
                <argument type="string">%cart.form.type.category.class%</argument>
            </call>
        </service>

        <!-- ConfigSetting Services and Listeners -->
        <service id="cart.listener.config_setting.search" lazy="true" class="%cart.listener.config_setting.search.class%">
            <tag name="kernel.event_listener" event="config_setting.search" method="onConfigSettingSearch" priority="50" />
            <call method="setSearch">
                <argument type="service" id="cart.search.admin" />
                <argument type="string">config_setting</argument>
            </call>
        </service>
        <service id="cart.listener.config_setting.list" lazy="true" class="%cart.listener.config_setting.list.class%">
            <tag name="kernel.event_listener" event="config_setting.search" method="onConfigSettingList" priority="40" />
            <call method="setRouter">
                <argument type="service" id="router"/>
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.config_setting.edit.return" lazy="true" class="%cart.listener.config_setting.edit.return.class%">
            <tag name="kernel.event_listener" event="config_setting.edit.return" method="onConfigSettingEditReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setImageService">
                <argument type="service" id="cart.image" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.config_setting.new.return" lazy="true" class="%cart.listener.config_setting.new.return.class%">
            <tag name="kernel.event_listener" event="config_setting.new.return" method="onConfigSettingNewReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setImageService">
                <argument type="service" id="cart.image" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.config_setting.create.return" lazy="true" class="%cart.listener.config_setting.create.return.class%">
            <tag name="kernel.event_listener" event="config_setting.create.return" method="onConfigSettingCreateReturn" priority="50" />
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.config_setting.update.return" lazy="true" class="%cart.listener.config_setting.update.return.class%">
            <tag name="kernel.event_listener" event="config_setting.update.return" method="onConfigSettingUpdateReturn" priority="50" />
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.config_setting.update" lazy="true" class="%cart.listener.config_setting.update.class%">
            <tag name="kernel.event_listener" event="config_setting.update" method="onConfigSettingUpdate" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.config_setting.insert" lazy="true" class="%cart.listener.config_setting.insert.class%">
            <tag name="kernel.event_listener" event="config_setting.insert" method="onConfigSettingInsert" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.config_setting.delete" lazy="true" class="%cart.listener.config_setting.delete.class%">
            <tag name="kernel.event_listener" event="config_setting.delete" method="onConfigSettingDelete" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.config_setting.admin.form" lazy="true" class="%cart.listener.config_setting.admin.form.class%">
            <tag name="kernel.event_listener" event="config_setting.admin.form" method="onConfigSettingAdminForm" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
            <call method="setFormTypeClass">
                <argument type="string">%cart.form.type.config_setting.class%</argument>
            </call>
            <call method="setThemeConfig">
                <argument type="service" id="cart.theme.config" />
            </call>
        </service>

        <!-- Contact Form Type -->
        <service id="cart.form.type.contact" lazy="true" class="%cart.form.type.contact.class%">
            <tag name="form.type" />
        </service>
        <!-- Event Listener : Build Contact Form -->
        <service id="cart.listener.contact.form" lazy="true" class="%cart.listener.contact.form.class%">
            <tag name="kernel.event_listener" event="contact.form" method="onContactForm" priority="50" />
            <call method="setFormTypeClass">
                <argument type="string">%cart.form.type.contact.class%</argument>
            </call>
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <!-- Event Listener : Handle Contact Form Submission -->
        <service id="cart.listener.contact.form.post" lazy="true" class="%cart.listener.contact.form.post.class%">
            <tag name="kernel.event_listener" event="contact.form.post" method="onContactFormPost" priority="50" />
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
            <call method="setEmailTo">
                <argument type="string">%cart.email.to.main%</argument>
            </call>
            <call method="setEmailFrom">
                <argument type="string">%cart.email.from.main%</argument>
            </call>
            <call method="setMailer">
                <argument type="service" id="mailer" />
            </call>
        </service>

        <!-- Content Services and Listeners -->
        <service id="cart.listener.content.search" lazy="true" class="%cart.listener.content.search.class%">
            <tag name="kernel.event_listener" event="content.search" method="onContentSearch" priority="50" />
            <call method="setSearch">
                <argument type="service" id="cart.search.admin" />
                <argument type="string">content</argument>
            </call>
        </service>
        <service id="cart.listener.content.list" lazy="true" class="%cart.listener.content.list.class%">
            <tag name="kernel.event_listener" event="content.search" method="onContentList" priority="40" />
            <call method="setRouter">
                <argument type="service" id="router"/>
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.content.edit.return" lazy="true" class="%cart.listener.content.edit.return.class%">
            <tag name="kernel.event_listener" event="content.edit.return" method="onContentEditReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setImageService">
                <argument type="service" id="cart.image" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.content.view.return" lazy="true" class="%cart.listener.content.view.return.class%">
            <tag name="kernel.event_listener" event="content.view.return" method="onContentViewReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setImageService">
                <argument type="service" id="cart.image" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
        </service>
        <service id="cart.listener.content.new.return" lazy="true" class="%cart.listener.content.new.return.class%">
            <tag name="kernel.event_listener" event="content.new.return" method="onContentNewReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setImageService">
                <argument type="service" id="cart.image" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.content.create.return" lazy="true" class="%cart.listener.content.create.return.class%">
            <tag name="kernel.event_listener" event="content.create.return" method="onContentCreateReturn" priority="50" />
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.content.update.return" lazy="true" class="%cart.listener.content.update.return.class%">
            <tag name="kernel.event_listener" event="content.update.return" method="onContentUpdateReturn" priority="50" />
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.content.update" lazy="true" class="%cart.listener.content.update.class%">
            <tag name="kernel.event_listener" event="content.update" method="onContentUpdate" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.content.insert" lazy="true" class="%cart.listener.content.insert.class%">
            <tag name="kernel.event_listener" event="content.insert" method="onContentInsert" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.content.delete" lazy="true" class="%cart.listener.content.delete.class%">
            <tag name="kernel.event_listener" event="content.delete" method="onContentDelete" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.form.type.content" lazy="true" class="%cart.form.type.content.class%">
            <tag name="form.type" />
            <call method="setThemeConfigService">
                <argument type="service" id="cart.theme.config" />
            </call>
        </service>
        <service id="cart.listener.content.admin.form" lazy="true" class="%cart.listener.content.admin.form.class%">
            <tag name="kernel.event_listener" event="content.admin.form" method="onContentAdminForm" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
            <call method="setFormTypeClass">
                <argument type="string">%cart.form.type.content.class%</argument>
            </call>
            <call method="setThemeConfig">
                <argument type="service" id="cart.theme.config" />
            </call>
        </service>

        <!-- ContentSlot Services and Listeners -->
        <service id="cart.listener.content_slot.search" lazy="true" class="%cart.listener.content_slot.search.class%">
            <tag name="kernel.event_listener" event="content_slot.search" method="onContentSlotSearch" priority="50" />
            <call method="setSearch">
                <argument type="service" id="cart.search.admin" />
                <argument type="string">content_slot</argument>
            </call>
        </service>
        <service id="cart.listener.content_slot.list" lazy="true" class="%cart.listener.content_slot.list.class%">
            <tag name="kernel.event_listener" event="content_slot.search" method="onContentSlotList" priority="40" />
            <call method="setRouter">
                <argument type="service" id="router"/>
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.content_slot.edit.return" lazy="true" class="%cart.listener.content_slot.edit.return.class%">
            <tag name="kernel.event_listener" event="content_slot.edit.return" method="onContentSlotEditReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setImageService">
                <argument type="service" id="cart.image" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.content_slot.new.return" lazy="true" class="%cart.listener.content_slot.new.return.class%">
            <tag name="kernel.event_listener" event="content_slot.new.return" method="onContentSlotNewReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setImageService">
                <argument type="service" id="cart.image" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.content_slot.create.return" lazy="true" class="%cart.listener.content_slot.create.return.class%">
            <tag name="kernel.event_listener" event="content_slot.create.return" method="onContentSlotCreateReturn" priority="50" />
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.content_slot.update.return" lazy="true" class="%cart.listener.content_slot.update.return.class%">
            <tag name="kernel.event_listener" event="content_slot.update.return" method="onContentSlotUpdateReturn" priority="50" />
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.content_slot.update" lazy="true" class="%cart.listener.content_slot.update.class%">
            <tag name="kernel.event_listener" event="content_slot.update" method="onContentSlotUpdate" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.content_slot.insert" lazy="true" class="%cart.listener.content_slot.insert.class%">
            <tag name="kernel.event_listener" event="content_slot.insert" method="onContentSlotInsert" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.content_slot.delete" lazy="true" class="%cart.listener.content_slot.delete.class%">
            <tag name="kernel.event_listener" event="content_slot.delete" method="onContentSlotDelete" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.form.type.content_slot" lazy="true" class="%cart.form.type.content_slot.class%">
            <tag name="form.type" />
        </service>
        <service id="cart.listener.content_slot.admin.form" lazy="true" class="%cart.listener.content_slot.admin.form.class%">
            <tag name="kernel.event_listener" event="content_slot.admin.form" method="onContentSlotAdminForm" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
            <call method="setFormTypeClass">
                <argument type="string">%cart.form.type.content_slot.class%</argument>
            </call>
            <call method="setThemeConfig">
                <argument type="service" id="cart.theme.config" />
            </call>
        </service>

        <!-- Customer Services and Listeners -->
        <service id="cart.listener.customer.search" lazy="true" class="%cart.listener.customer.search.class%">
            <tag name="kernel.event_listener" event="customer.search" method="onCustomerSearch" priority="50" />
            <call method="setSearch">
                <argument type="service" id="cart.search.admin" />
                <argument type="string">customer</argument>
            </call>
        </service>
        <service id="cart.listener.customer.list" lazy="true" class="%cart.listener.customer.list.class%">
            <tag name="kernel.event_listener" event="customer.search" method="onCustomerList" priority="40" />
            <call method="setRouter">
                <argument type="service" id="router"/>
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.customer.navigation" lazy="true" class="%cart.listener.customer.navigation.class%">
            <tag name="kernel.event_listener" event="menu.build.customer_dashboard" method="onCustomerNavigation" priority="50" />
            <call method="setRouter">
                <argument type="service" id="router"/>
            </call>
        </service>
        <service id="cart.listener.customer.edit.return" lazy="true" class="%cart.listener.customer.edit.return.class%">
            <tag name="kernel.event_listener" event="customer.edit.return" method="onCustomerEditReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.customer.new.return" lazy="true" class="%cart.listener.customer.new.return.class%">
            <tag name="kernel.event_listener" event="customer.new.return" method="onCustomerNewReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.customer.create.return" lazy="true" class="%cart.listener.customer.create.return.class%">
            <tag name="kernel.event_listener" event="customer.create.return" method="onCustomerCreateReturn" priority="50" />
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.customer.update.return" lazy="true" class="%cart.listener.customer.update.return.class%">
            <tag name="kernel.event_listener" event="customer.update.return" method="onCustomerUpdateReturn" priority="50" />
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>

        <!-- Event Listener : Create Register Form -->
        <service id="cart.listener.customer.register.form" lazy="true" class="%cart.listener.customer.register.form.class%">
            <tag name="kernel.event_listener" event="customer.register.form" method="onCustomerRegisterForm" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setCurrencyService">
                <argument type="service" id="cart.currency" />
            </call>
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
            <call method="setFormTypeClass">
                <argument type="string">%cart.form.type.customer.register.class%</argument>
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>

        <!-- Form : Customer Admin Form Type -->
        <service id="cart.form.type.customer" lazy="true" class="%cart.form.type.customer.class%">
            <tag name="form.type" />
            <!-- For Allowed Country IDs -->
            <call method="setCartService">
                <argument type="service" id="cart" />
            </call>
        </service>

        <!-- Event Listener : Create Admin Form -->
        <service id="cart.listener.customer.admin.form" lazy="true" class="%cart.listener.customer.admin.form.class%">
            <tag name="kernel.event_listener" event="customer.admin.form" method="onCustomerAdminForm" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setCurrencyService">
                <argument type="service" id="cart.currency" />
            </call>
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
            <call method="setFormTypeClass">
                <argument type="string">%cart.form.type.customer.class%</argument>
            </call>
            <!-- For Allowed Country IDs -->
            <call method="setCartService">
                <argument type="service" id="cart" />
            </call>
        </service>

        <!-- Customer Listeners -->
        <service id="cart.listener.customer.register.return" lazy="true" class="%cart.listener.customer.register.return.class%">
            <tag name="kernel.event_listener" event="customer.register.return" method="onCustomerRegisterReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.customer.register" lazy="true" class="%cart.listener.customer.register.class%">
            <tag name="kernel.event_listener" event="customer.register" method="onCustomerRegister" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setMailer">
                <argument type="service" id="mailer" />
            </call>
            <call method="setFromEmail">
                <argument type="string">%cart.email.from.main%</argument>
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
            <call method="setSecurityPasswordEncoder">
                <argument type="service" id="security.password_encoder" />
            </call>
        </service>
        <service id="cart.listener.customer.register.checkemail.return" lazy="true" class="%cart.listener.customer.register.checkemail.return.class%">
            <tag name="kernel.event_listener" event="customer.register.checkemail.return" method="onCustomerRegisterCheckEmailReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
        </service>
        <service id="cart.listener.customer.register.confirm" lazy="true" class="%cart.listener.customer.register.confirm.class%">
            <tag name="kernel.event_listener" event="customer.register.confirm" method="onCustomerRegisterConfirm" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setMailer">
                <argument type="service" id="mailer" />
            </call>
            <call method="setFromEmail">
                <argument type="string">%cart.email.from.main%</argument>
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
        </service>
        <service id="cart.listener.customer.register.confirm.return" lazy="true" class="%cart.listener.customer.register.confirm.return.class%">
            <tag name="kernel.event_listener" event="customer.register.confirm.return" method="onCustomerRegisterConfirmReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
        </service>
        <service id="cart.listener.customer.register.post.return" lazy="true" class="%cart.listener.customer.register.post.return.class%">
            <tag name="kernel.event_listener" event="customer.register.post.return" method="onCustomerRegisterPostReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>

        <!-- Form : Customer Profile Form Type -->
        <service id="cart.form.type.customer.profile" lazy="true" class="%cart.form.type.customer.profile.class%">
            <tag name="form.type" />
            <!-- For Allowed Country IDs -->
            <call method="setCartService">
                <argument type="service" id="cart" />
            </call>
        </service>

        <!-- Event Listener: Build Customer Account/Profile Form -->
        <service id="cart.listener.customer.profile.form" lazy="true" class="%cart.listener.customer.profile.form.class%">
            <tag name="kernel.event_listener" event="customer.profile.form" method="onCustomerProfileForm" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setCurrencyService">
                <argument type="service" id="cart.currency" />
            </call>
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
            <call method="setCartService">
                <argument type="service" id="cart" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
            <call method="setFormTypeClass">
                <argument type="string">%cart.form.type.customer.profile.class%</argument>
            </call>
        </service>

        <!-- Event Listener: Return data to Customer Account/Profile page -->
        <service id="cart.listener.customer.profile.return" lazy="true" class="%cart.listener.customer.profile.return.class%">
            <tag name="kernel.event_listener" event="customer.profile.return" method="onCustomerProfileReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>

        <!-- Event Listener: Return data after Customer Account/Profile data is posted -->
        <service id="cart.listener.customer.profile.post.return" lazy="true" class="%cart.listener.customer.profile.post.return.class%">
            <tag name="kernel.event_listener" event="customer.profile.post.return" method="onCustomerProfilePostReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>

        <!-- Event Listener: Return data to Customer Order History page -->
        <service id="cart.listener.customer.orders.return" lazy="true" class="%cart.listener.customer.orders.return.class%">
            <tag name="kernel.event_listener" event="customer.orders.return" method="onCustomerOrdersReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
        </service>

        <!-- Event Listener: Return data to Customer Order View page -->
        <service id="cart.listener.customer.order.return" lazy="true" class="%cart.listener.customer.order.return.class%">
            <tag name="kernel.event_listener" event="customer.order.return" method="onCustomerOrderReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>

        <!-- Event Listener : Customer Forgot Password Form -->
        <service id="cart.listener.customer.forgotpassword.form" lazy="true" class="%cart.listener.customer.forgotpassword.form.class%">
            <tag name="kernel.event_listener" event="customer.forgotpassword.form" method="onCustomerForgotPasswordForm" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
            <call method="setFormTypeClass">
                <argument type="string">%cart.form.type.customer.forgotpassword.class%</argument>
            </call>
        </service>

        <!-- Event Listener : Handle Forgot Password Form Submission -->
        <service id="cart.listener.customer.forgotpassword" lazy="true" class="%cart.listener.customer.forgotpassword.class%">
            <tag name="kernel.event_listener" event="customer.forgotpassword" method="onCustomerForgotPassword" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setMailer">
                <argument type="service" id="mailer" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
            <call method="setSecurityPasswordEncoder">
                <argument type="service" id="security.password_encoder" />
            </call>
            <call method="setFromEmail">
                <argument type="string">%cart.email.from.main%</argument>
            </call>
        </service>

        <!-- Event Listener : Display Forgot Password Form -->
        <service id="cart.listener.customer.forgotpassword.return" lazy="true" class="%cart.listener.customer.forgotpassword.return.class%">
            <tag name="kernel.event_listener" event="customer.forgotpassword.return" method="onCustomerForgotPasswordReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>

        <!-- Event Listener : Return from Forgot Password Form Submission -->
        <service id="cart.listener.customer.forgotpassword.post.return" lazy="true" class="%cart.listener.customer.forgotpassword.post.return.class%">
            <tag name="kernel.event_listener" event="customer.forgotpassword.post.return" method="onCustomerForgotPasswordPostReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>

        <service id="cart.listener.customer.forgotpassword.success" lazy="true" class="%cart.listener.customer.forgotpassword.success.class%">
            <tag name="kernel.event_listener" event="customer.forgotpassword.success" method="onCustomerForgotPasswordSuccess" priority="50" />
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>

        <!-- Event Listener : Customer Update Password Form -->
        <service id="cart.listener.customer.updatepassword.form" lazy="true" class="%cart.listener.customer.updatepassword.form.class%">
            <tag name="kernel.event_listener" event="customer.updatepassword.form" method="onCustomerUpdatePasswordForm" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
            <call method="setFormTypeClass">
                <argument type="string">%cart.form.type.customer.updatepassword.class%</argument>
            </call>
        </service>

        <service id="cart.listener.customer.updatepassword" lazy="true" class="%cart.listener.customer.updatepassword.class%">
            <tag name="kernel.event_listener" event="customer.updatepassword" method="onCustomerUpdatePassword" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setMailer">
                <argument type="service" id="mailer" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
            <call method="setSecurityPasswordEncoder">
                <argument type="service" id="security.password_encoder" />
            </call>
            <call method="setFromEmail">
                <argument type="string">%cart.email.from.main%</argument>
            </call>
        </service>

        <service id="cart.listener.customer.updatepassword.return" lazy="true" class="%cart.listener.customer.updatepassword.return.class%">
            <tag name="kernel.event_listener" event="customer.updatepassword.return" method="onCustomerUpdatePasswordReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>

        <service id="cart.listener.customer.updatepassword.post.return" lazy="true" class="%cart.listener.customer.updatepassword.post.return.class%">
            <tag name="kernel.event_listener" event="customer.updatepassword.post.return" method="onCustomerUpdatePasswordPostReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>

        <!-- Event Listener : Insert Customer -->
        <service id="cart.listener.customer.insert" lazy="true" class="%cart.listener.customer.insert.class%">
            <tag name="kernel.event_listener" event="customer.insert" method="onCustomerInsert" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setSecurityPasswordEncoder">
                <argument type="service" id="security.password_encoder" />
            </call>
        </service>

        <!-- Event Listener : Update Customer -->
        <service id="cart.listener.customer.update" lazy="true" class="%cart.listener.customer.update.class%">
            <tag name="kernel.event_listener" event="customer.update" method="onCustomerUpdate" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setSecurityPasswordEncoder">
                <argument type="service" id="security.password_encoder" />
            </call>
            <call method="setCartSessionService">
                <argument type="service" id="cart.session" />
            </call>
        </service>

        <service id="cart.listener.customer.delete" lazy="true" class="%cart.listener.customer.delete.class%">
            <tag name="kernel.event_listener" event="customer.delete" method="onCustomerDelete" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>

        <!-- Event Listeners : Customer Address -->
        <service id="cart.listener.customer_address.search" lazy="true" class="%cart.listener.customer_address.search.class%">
            <tag name="kernel.event_listener" event="customer_address.search" method="onCustomerAddressSearch" priority="50" />
            <call method="setSearch">
                <argument type="service" id="cart.search.admin" />
                <argument type="string">customer_address</argument>
            </call>
        </service>
        <service id="cart.listener.customer_address.list" lazy="true" class="%cart.listener.customer_address.list.class%">
            <tag name="kernel.event_listener" event="customer_address.search" method="onCustomerAddressList" priority="40" />
            <call method="setRouter">
                <argument type="service" id="router"/>
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.customer_address.new.return" lazy="true" class="%cart.listener.customer_address.new.return.class%">
            <tag name="kernel.event_listener" event="customer_address.new.return" method="onCustomerAddressNewReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <!-- Customer Address Form Type -->
        <service id="cart.form.type.customer_address" lazy="true" class="%cart.form.type.customer_address.class%">
            <tag name="form.type" />
            <call method="setCartService">
                <argument type="service" id="cart" />
            </call>
        </service>
        <!-- Customer Address Form Builder -->
        <service id="cart.listener.customer_address.form" lazy="true" class="%cart.listener.customer_address.form.class%">
            <tag name="kernel.event_listener" event="customer_address.form" method="onCustomerAddressForm" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setCurrencyService">
                <argument type="service" id="cart.currency" />
            </call>
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
            <call method="setFormTypeClass">
                <argument type="string">%cart.form.type.customer_address.class%</argument>
            </call>
            <call method="setCartService">
                <argument type="service" id="cart" />
            </call>
        </service>
        <service id="cart.listener.customer_address.insert" lazy="true" class="%cart.listener.customer_address.insert.class%">
            <tag name="kernel.event_listener" event="customer_address.insert" method="onCustomerAddressInsert" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setCartSessionService">
                <argument type="service" id="cart.session" />
            </call>
        </service>
        <service id="cart.listener.customer_address.update" lazy="true" class="%cart.listener.customer_address.update.class%">
            <tag name="kernel.event_listener" event="customer_address.update" method="onCustomerAddressUpdate" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setCartSessionService">
                <argument type="service" id="cart.session" />
            </call>
        </service>
        <service id="cart.listener.customer_address.delete" lazy="true" class="%cart.listener.customer_address.delete.class%">
            <tag name="kernel.event_listener" event="customer_address.delete" method="onCustomerAddressDelete" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setCartSessionService">
                <argument type="service" id="cart.session" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.customer_address.create.return" lazy="true" class="%cart.listener.customer_address.create.return.class%">
            <tag name="kernel.event_listener" event="customer_address.create.return" method="onCustomerAddressCreateReturn" priority="50" />
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.customer_address.update.return" lazy="true" class="%cart.listener.customer_address.update.return.class%">
            <tag name="kernel.event_listener" event="customer_address.update.return" method="onCustomerAddressUpdateReturn" priority="50" />
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.customer_address.edit.return" lazy="true" class="%cart.listener.customer_address.edit.return.class%">
            <tag name="kernel.event_listener" event="customer_address.edit.return" method="onCustomerAddressEditReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>

        <!-- Discount -->
        <service id="cart.listener.discount.search" lazy="true" class="%cart.listener.discount.search.class%">
            <tag name="kernel.event_listener" event="discount.search" method="onDiscountSearch" priority="50" />
            <call method="setSearch">
                <argument type="service" id="cart.search.admin" />
                <argument type="string">discount</argument>
            </call>
        </service>
        <service id="cart.listener.discount.list" lazy="true" class="%cart.listener.discount.list.class%">
            <tag name="kernel.event_listener" event="discount.search" method="onDiscountList" priority="40" />
            <call method="setRouter">
                <argument type="service" id="router"/>
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.discount.new.return" lazy="true" class="%cart.listener.discount.new.return.class%">
            <tag name="kernel.event_listener" event="discount.new.return" method="onDiscountNewReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.discount.insert" lazy="true" class="%cart.listener.discount.insert.class%">
            <tag name="kernel.event_listener" event="discount.insert" method="onDiscountInsert" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.discount.edit.return" lazy="true" class="%cart.listener.discount.edit.return.class%">
            <tag name="kernel.event_listener" event="discount.edit.return" method="onDiscountEditReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.discount.update" lazy="true" class="%cart.listener.discount.update.class%">
            <tag name="kernel.event_listener" event="discount.update" method="onDiscountUpdate" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.discount.delete" lazy="true" class="%cart.listener.discount.delete.class%">
            <tag name="kernel.event_listener" event="discount.delete" method="onDiscountDelete" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.discount.create.return" lazy="true" class="%cart.listener.discount.create.return.class%">
            <tag name="kernel.event_listener" event="discount.create.return" method="onDiscountCreateReturn" priority="50" />
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.discount.update.return" lazy="true" class="%cart.listener.discount.update.return.class%">
            <tag name="kernel.event_listener" event="discount.update.return" method="onDiscountUpdateReturn" priority="50" />
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.form.type.discount" lazy="true" class="%cart.form.type.discount.class%">
            <tag name="form.type" />
        </service>
        <service id="cart.listener.discount.admin.form" lazy="true" class="%cart.listener.discount.admin.form.class%">
            <tag name="kernel.event_listener" event="discount.admin.form" method="onDiscountAdminForm" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
            <call method="setFormTypeClass">
                <argument type="string">%cart.form.type.discount.class%</argument>
            </call>
        </service>

        <!-- ItemVar -->
        <service id="cart.listener.item_var.search" lazy="true" class="%cart.listener.item_var.search.class%">
            <tag name="kernel.event_listener" event="item_var.search" method="onItemVarSearch" priority="50" />
            <call method="setSearch">
                <argument type="service" id="cart.search.admin" />
                <argument type="string">item_var</argument>
            </call>
        </service>
        <service id="cart.listener.item_var.list" lazy="true" class="%cart.listener.item_var.list.class%">
            <tag name="kernel.event_listener" event="item_var.search" method="onItemVarList" priority="40" />
            <call method="setRouter">
                <argument type="service" id="router"/>
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.item_var.edit.return" lazy="true" class="%cart.listener.item_var.edit.return.class%">
            <tag name="kernel.event_listener" event="item_var.edit.return" method="onItemVarEditReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.item_var.new.return" lazy="true" class="%cart.listener.item_var.new.return.class%">
            <tag name="kernel.event_listener" event="item_var.new.return" method="onItemVarNewReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.item_var.create.return" lazy="true" class="%cart.listener.item_var.create.return.class%">
            <tag name="kernel.event_listener" event="item_var.create.return" method="onItemVarCreateReturn" priority="50" />
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.item_var.update.return" lazy="true" class="%cart.listener.item_var.update.return.class%">
            <tag name="kernel.event_listener" event="item_var.update.return" method="onItemVarUpdateReturn" priority="50" />
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.item_var.update" lazy="true" class="%cart.listener.item_var.update.class%">
            <tag name="kernel.event_listener" event="item_var.update" method="onItemVarUpdate" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.item_var.insert" lazy="true" class="%cart.listener.item_var.insert.class%">
            <tag name="kernel.event_listener" event="item_var.insert" method="onItemVarInsert" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.item_var.delete" lazy="true" class="%cart.listener.item_var.delete.class%">
            <tag name="kernel.event_listener" event="item_var.delete" method="onItemVarDelete" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.form.type.item_var" lazy="true" class="%cart.form.type.item_var.class%">
            <tag name="form.type" />
        </service>
        <service id="cart.listener.item_var.admin.form" lazy="true" class="%cart.listener.item_var.admin.form.class%">
            <tag name="kernel.event_listener" event="item_var.admin.form" method="onItemVarAdminForm" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
            <call method="setFormTypeClass">
                <argument type="string">%cart.form.type.item_var.class%</argument>
            </call>
        </service>

        <!-- ItemVarOption -->
        <service id="cart.listener.item_var_option.search" lazy="true" class="%cart.listener.item_var_option.search.class%">
            <tag name="kernel.event_listener" event="item_var_option.search" method="onItemVarOptionSearch" priority="50" />
            <call method="setSearch">
                <argument type="service" id="cart.search.admin" />
            </call>
        </service>
        <service id="cart.listener.item_var_option.list" lazy="true" class="%cart.listener.item_var_option.list.class%">
            <tag name="kernel.event_listener" event="item_var_option.search" method="onItemVarOptionList" priority="40" />
            <call method="setRouter">
                <argument type="service" id="router"/>
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.item_var_option.edit.return" lazy="true" class="%cart.listener.item_var_option.edit.return.class%">
            <tag name="kernel.event_listener" event="item_var_option.edit.return" method="onItemVarOptionEditReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.item_var_option.new.return" lazy="true" class="%cart.listener.item_var_option.new.return.class%">
            <tag name="kernel.event_listener" event="item_var_option.new.return" method="onItemVarOptionNewReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.item_var_option.update" lazy="true" class="%cart.listener.item_var_option.update.class%">
            <tag name="kernel.event_listener" event="item_var_option.update" method="onItemVarOptionUpdate" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.item_var_option.insert" lazy="true" class="%cart.listener.item_var_option.insert.class%">
            <tag name="kernel.event_listener" event="item_var_option.insert" method="onItemVarOptionInsert" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.item_var_option.create.return" lazy="true" class="%cart.listener.item_var_option.create.return.class%">
            <tag name="kernel.event_listener" event="item_var_option.create.return" method="onItemVarOptionCreateReturn" priority="50" />
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.item_var_option.update.return" lazy="true" class="%cart.listener.item_var_option.update.return.class%">
            <tag name="kernel.event_listener" event="item_var_option.update.return" method="onItemVarOptionUpdateReturn" priority="50" />
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.item_var_option.delete" lazy="true" class="%cart.listener.item_var_option.delete.class%">
            <tag name="kernel.event_listener" event="item_var_option.delete" method="onItemVarOptionDelete" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.form.type.item_var_option" lazy="true" class="%cart.form.type.item_var_option.class%">
            <tag name="form.type" />
        </service>
        <service id="cart.listener.item_var_option.admin.form" lazy="true" class="%cart.listener.item_var_option.admin.form.class%">
            <tag name="kernel.event_listener" event="item_var_option.admin.form" method="onItemVarOptionAdminForm" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
            <call method="setFormTypeClass">
                <argument type="string">%cart.form.type.item_var_option.class%</argument>
            </call>
        </service>

        <!-- ItemVarSet -->
        <service id="cart.listener.item_var_set.search" lazy="true" class="%cart.listener.item_var_set.search.class%">
            <tag name="kernel.event_listener" event="item_var_set.search" method="onItemVarSetSearch" priority="50" />
        </service>
        <service id="cart.listener.item_var_set.list" lazy="true" class="%cart.listener.item_var_set.list.class%">
            <tag name="kernel.event_listener" event="item_var_set.search" method="onItemVarSetList" priority="40" />
            <call method="setRouter">
                <argument type="service" id="router"/>
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.item_var_set.edit.return" lazy="true" class="%cart.listener.item_var_set.edit.return.class%">
            <tag name="kernel.event_listener" event="item_var_set.edit.return" method="onItemVarSetEditReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.item_var_set.new.return" lazy="true" class="%cart.listener.item_var_set.new.return.class%">
            <tag name="kernel.event_listener" event="item_var_set.new.return" method="onItemVarSetNewReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.item_var_set.update" lazy="true" class="%cart.listener.item_var_set.update.class%">
            <tag name="kernel.event_listener" event="item_var_set.update" method="onItemVarSetUpdate" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.item_var_set.insert" lazy="true" class="%cart.listener.item_var_set.insert.class%">
            <tag name="kernel.event_listener" event="item_var_set.insert" method="onItemVarSetInsert" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.item_var_set.create.return" lazy="true" class="%cart.listener.item_var_set.create.return.class%">
            <tag name="kernel.event_listener" event="item_var_set.create.return" method="onItemVarSetCreateReturn" priority="50" />
            <call method="setSession">
                <argument type="service" id="session" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.item_var_set.update.return" lazy="true" class="%cart.listener.item_var_set.update.return.class%">
            <tag name="kernel.event_listener" event="item_var_set.update.return" method="onItemVarSetUpdateReturn" priority="50" />
            <call method="setSession">
                <argument type="service" id="session" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.item_var_set.delete" lazy="true" class="%cart.listener.item_var_set.delete.class%">
            <tag name="kernel.event_listener" event="item_var_set.delete" method="onItemVarSetDelete" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.item_var_set.admin.form" lazy="true" class="%cart.listener.item_var_set.admin.form.class%">
            <tag name="kernel.event_listener" event="item_var_set.admin.form" method="onItemVarSetAdminForm" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
        </service>

        <!-- ItemVarSetVar -->
        <service id="cart.listener.item_var_set_var.search" lazy="true" class="%cart.listener.item_var_set_var.search.class%">
            <tag name="kernel.event_listener" event="item_var_set_var.search" method="onItemVarSetVarSearch" priority="50" />
        </service>
        <service id="cart.listener.item_var_set_var.list" lazy="true" class="%cart.listener.item_var_set_var.list.class%">
            <tag name="kernel.event_listener" event="item_var_set_var.search" method="onItemVarSetVarList" priority="40" />
            <call method="setRouter">
                <argument type="service" id="router"/>
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.item_var_set_var.edit.return" lazy="true" class="%cart.listener.item_var_set_var.edit.return.class%">
            <tag name="kernel.event_listener" event="item_var_set_var.edit.return" method="onItemVarSetVarEditReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.item_var_set_var.new.return" lazy="true" class="%cart.listener.item_var_set_var.new.return.class%">
            <tag name="kernel.event_listener" event="item_var_set_var.new.return" method="onItemVarSetVarNewReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.item_var_set_var.create.return" lazy="true" class="%cart.listener.item_var_set_var.create.return.class%">
            <tag name="kernel.event_listener" event="item_var_set_var.create.return" method="onItemVarSetVarCreateReturn" priority="50" />
            <call method="setSession">
                <argument type="service" id="session" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.item_var_set_var.update.return" lazy="true" class="%cart.listener.item_var_set_var.update.return.class%">
            <tag name="kernel.event_listener" event="item_var_set_var.update.return" method="onItemVarSetVarUpdateReturn" priority="50" />
            <call method="setSession">
                <argument type="service" id="session" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.item_var_set_var.update" lazy="true" class="%cart.listener.item_var_set_var.update.class%">
            <tag name="kernel.event_listener" event="item_var_set_var.update" method="onItemVarSetVarUpdate" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.item_var_set_var.insert" lazy="true" class="%cart.listener.item_var_set_var.insert.class%">
            <tag name="kernel.event_listener" event="item_var_set_var.insert" method="onItemVarSetVarInsert" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.item_var_set_var.delete" lazy="true" class="%cart.listener.item_var_set_var.delete.class%">
            <tag name="kernel.event_listener" event="item_var_set_var.delete" method="onItemVarSetVarDelete" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.item_var_set_var.admin.form" lazy="true" class="%cart.listener.item_var_set_var.admin.form.class%">
            <tag name="kernel.event_listener" event="item_var_set_var.admin.form" method="onItemVarSetVarAdminForm" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
        </service>

        <!-- Order Services and Listeners -->
        <service id="cart.listener.order.search" lazy="true" class="%cart.listener.order.search.class%">
            <tag name="kernel.event_listener" event="order.search" method="onOrderSearch" priority="50" />
        </service>
        <service id="cart.listener.order.list" lazy="true" class="%cart.listener.order.list.class%">
            <tag name="kernel.event_listener" event="order.search" method="onOrderList" priority="40" />
            <call method="setRouter">
                <argument type="service" id="router"/>
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.order.edit.return" lazy="true" class="%cart.listener.order.edit.return.class%">
            <tag name="kernel.event_listener" event="order.edit.return" method="onOrderEditReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setCurrencyService">
                <argument type="service" id="cart.currency" />
            </call>
            <call method="setPaymentService">
                <argument type="service" id="cart.payment" />
            </call>
            <call method="setShippingService">
                <argument type="service" id="cart.shipping" />
            </call>
            <call method="setCartTotalService">
                <argument type="service" id="cart.total" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
        </service>
        <service id="cart.listener.order.admin.form" lazy="true" class="%cart.listener.order.admin.form.class%">
            <tag name="kernel.event_listener" event="order.admin.form" method="onOrderAdminForm" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setCurrencyService">
                <argument type="service" id="cart.currency" />
            </call>
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
            <!-- For Allowed Country IDs -->
            <call method="setCartService">
                <argument type="service" id="cart" />
            </call>
            <!-- For Order Status Options -->
            <call method="setOrderService">
                <argument type="service" id="cart.order" />
            </call>
        </service>
        <service id="cart.listener.order.new.return" lazy="true" class="%cart.listener.order.new.return.class%">
            <tag name="kernel.event_listener" event="order.new.return" method="onOrderNewReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setCurrencyService">
                <argument type="service" id="cart.currency" />
            </call>
            <call method="setPaymentService">
                <argument type="service" id="cart.payment" />
            </call>
            <call method="setShippingService">
                <argument type="service" id="cart.shipping" />
            </call>
            <call method="setCartTotalService">
                <argument type="service" id="cart.total" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
        </service>
        <service id="cart.listener.order.update" lazy="true" class="%cart.listener.order.update.class%">
            <tag name="kernel.event_listener" event="order.update" method="onOrderUpdate" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setCurrencyService">
                <argument type="service" id="cart.currency" />
            </call>
        </service>
        <service id="cart.listener.order.insert" lazy="true" class="%cart.listener.order.insert.class%">
            <tag name="kernel.event_listener" event="order.insert" method="onOrderInsert" priority="50" />
            <call method="setOrderService">
                <argument type="service" id="cart.order" />
            </call>
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setCurrencyService">
                <argument type="service" id="cart.currency" />
            </call>
        </service>
        <service id="cart.listener.order.create.return" lazy="true" class="%cart.listener.order.create.return.class%">
            <tag name="kernel.event_listener" event="order.create.return" method="onOrderCreateReturn" priority="50" />
            <call method="setSession">
                <argument type="service" id="session" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.order.update.return" lazy="true" class="%cart.listener.order.update.return.class%">
            <tag name="kernel.event_listener" event="order.update.return" method="onOrderUpdateReturn" priority="50" />
            <call method="setSession">
                <argument type="service" id="session" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.order.delete" lazy="true" class="%cart.listener.order.delete.class%">
            <tag name="kernel.event_listener" event="order.delete" method="onOrderDelete" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.order.update.items" lazy="true" class="%cart.listener.order.update.items.class%">
            <tag name="kernel.event_listener" event="order.update.items" method="onOrderUpdateItems" priority="50" />
            <call method="setCartSession">
                <argument type="service" id="cart.session" />
            </call>
            <call method="setCartTotalService">
                <argument type="service" id="cart.total" />
            </call>
            <call method="setDiscountService">
                <argument type="service" id="cart.discount" />
            </call>
        </service>
        <service id="cart.listener.order.update.shipping" lazy="true" class="%cart.listener.order.update.shipping.class%">
            <tag name="kernel.event_listener" event="order.update.shipping" method="onOrderUpdateShipping" priority="50" />
            <call method="setCartSession">
                <argument type="service" id="cart.session" />
            </call>
            <call method="setCartTotalService">
                <argument type="service" id="cart.total" />
            </call>
            <call method="setDiscountService">
                <argument type="service" id="cart.discount" />
            </call>
        </service>
        <service id="cart.listener.order.update.customer" lazy="true" class="%cart.listener.order.update.customer.class%">
            <tag name="kernel.event_listener" event="order.update.customer" method="onOrderUpdateCustomer" priority="50" />
            <call method="setCartSession">
                <argument type="service" id="cart.session" />
            </call>
            <call method="setCartTotalService">
                <argument type="service" id="cart.total" />
            </call>
            <call method="setDiscountService">
                <argument type="service" id="cart.discount" />
            </call>
        </service>
        <service id="cart.listener.order.add.item" lazy="true" class="%cart.listener.order.add.item.class%">
            <tag name="kernel.event_listener" event="order.add.item" method="onOrderAddItem" priority="50" />
            <call method="setCartSession">
                <argument type="service" id="cart.session" />
            </call>
            <call method="setCartTotalService">
                <argument type="service" id="cart.total" />
            </call>
            <call method="setDiscountService">
                <argument type="service" id="cart.discount" />
            </call>
        </service>
        <service id="cart.listener.order.remove.item" lazy="true" class="%cart.listener.order.remove.item.class%">
            <tag name="kernel.event_listener" event="order.remove.item" method="onOrderRemoveItem" priority="50" />
            <call method="setCartSession">
                <argument type="service" id="cart.session" />
            </call>
            <call method="setCartTotalService">
                <argument type="service" id="cart.total" />
            </call>
            <call method="setDiscountService">
                <argument type="service" id="cart.discount" />
            </call>
        </service>
        <service id="cart.listener.order.add.discount" lazy="true" class="%cart.listener.order.add.discount.class%">
            <tag name="kernel.event_listener" event="order.add.discount" method="onOrderAddDiscount" priority="50" />
            <call method="setCartSession">
                <argument type="service" id="cart.session" />
            </call>
            <call method="setCartTotalService">
                <argument type="service" id="cart.total" />
            </call>
            <call method="setDiscountService">
                <argument type="service" id="cart.discount" />
            </call>
        </service>
        <service id="cart.listener.order.remove.discount" lazy="true" class="%cart.listener.order.remove.discount.class%">
            <tag name="kernel.event_listener" event="order.remove.discount" method="onOrderRemoveDiscount" priority="50" />
            <call method="setCartSession">
                <argument type="service" id="cart.session" />
            </call>
            <call method="setCartTotalService">
                <argument type="service" id="cart.total" />
            </call>
            <call method="setDiscountService">
                <argument type="service" id="cart.discount" />
            </call>
        </service>

        <!-- Order Item Services and Listeners -->
        <service id="cart.listener.order_item.search" lazy="true" class="%cart.listener.order_item.search.class%">
            <tag name="kernel.event_listener" event="order_item.search" method="onOrderItemSearch" priority="50" />
        </service>
        <service id="cart.listener.order_item.list" lazy="true" class="%cart.listener.order_item.list.class%">
            <tag name="kernel.event_listener" event="order_item.search" method="onOrderItemList" priority="40" />
            <call method="setRouter">
                <argument type="service" id="router"/>
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>

        <!-- OrderShipment Services and Listeners -->
        <service id="cart.listener.order_shipment.search" lazy="true" class="%cart.listener.order_shipment.search.class%">
            <tag name="kernel.event_listener" event="order_shipment.search" method="onOrderShipmentSearch" priority="50" />
        </service>
        <service id="cart.listener.order_shipment.list" lazy="true" class="%cart.listener.order_shipment.list.class%">
            <tag name="kernel.event_listener" event="order_shipment.search" method="onOrderShipmentList" priority="40" />
            <call method="setRouter">
                <argument type="service" id="router"/>
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.order_shipment.new.return" lazy="true" class="%cart.listener.order_shipment.new.return.class%">
            <tag name="kernel.event_listener" event="order_shipment.new.return" method="onOrderShipmentNewReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
        </service>
        <service id="cart.listener.order_shipment.admin.form" lazy="true" class="%cart.listener.order_shipment.admin.form.class%">
            <tag name="kernel.event_listener" event="order_shipment.admin.form" method="onOrderShipmentAdminForm" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
        </service>
        <service id="cart.listener.order_shipment.edit.return" lazy="true" class="%cart.listener.order_shipment.edit.return.class%">
            <tag name="kernel.event_listener" event="order_shipment.edit.return" method="onOrderShipmentEditReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme" />
            </call>
        </service>
        <service id="cart.listener.order_shipment.update" lazy="true" class="%cart.listener.order_shipment.update.class%">
            <tag name="kernel.event_listener" event="order_shipment.update" method="onOrderShipmentUpdate" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setCartService">
                <argument type="service" id="cart" />
            </call>
        </service>
        <service id="cart.listener.order_shipment.update.return" lazy="true" class="%cart.listener.order_shipment.update.return.class%">
            <tag name="kernel.event_listener" event="order_shipment.update.return" method="onOrderShipmentUpdateReturn" priority="50" />
            <call method="setSession">
                <argument type="service" id="session" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>

        <!-- Shipping Method admin -->
        <service id="cart.listener.shipping_method.search" lazy="true" class="%cart.listener.shipping_method.search.class%">
            <tag name="kernel.event_listener" event="shipping_method.search" method="onShippingMethodSearch" priority="50" />
        </service>
        <service id="cart.listener.shipping_method.list" lazy="true" class="%cart.listener.shipping_method.list.class%">
            <tag name="kernel.event_listener" event="shipping_method.search" method="onShippingMethodList" priority="40" />
            <call method="setRouter">
                <argument type="service" id="router"/>
            </call>
            <call method="setShippingService">
                <argument type="service" id="cart.shipping" />
            </call>
        </service>
        <service id="cart.listener.shipping_method.admin.form" lazy="true" class="%cart.listener.shipping_method.admin.form.class%">
            <tag name="kernel.event_listener" event="shipping_method.admin.form" method="onShippingMethodAdminForm" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setCurrencyService">
                <argument type="service" id="cart.currency" />
            </call>
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
        </service>
        <service id="cart.listener.shipping_method.new.return" lazy="true" class="%cart.listener.shipping_method.new.return.class%">
            <tag name="kernel.event_listener" event="shipping_method.new.return" method="onShippingMethodNewReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.shipping_method.create.return" lazy="true" class="%cart.listener.shipping_method.create.return.class%">
            <tag name="kernel.event_listener" event="shipping_method.create.return" method="onShippingMethodCreateReturn" priority="50" />
            <call method="setSession">
                <argument type="service" id="session" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.shipping_method.insert" lazy="true" class="%cart.listener.shipping_method.insert.class%">
            <tag name="kernel.event_listener" event="shipping_method.insert" method="onShippingMethodInsert" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.shipping_method.edit.return" lazy="true" class="%cart.listener.shipping_method.edit.return.class%">
            <tag name="kernel.event_listener" event="shipping_method.edit.return" method="onShippingMethodEditReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.shipping_method.update.return" lazy="true" class="%cart.listener.shipping_method.update.return.class%">
            <tag name="kernel.event_listener" event="shipping_method.update.return" method="onShippingMethodUpdateReturn" priority="50" />
            <call method="setSession">
                <argument type="service" id="session" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.shipping_method.delete" lazy="true" class="%cart.listener.shipping_method.delete.class%">
            <tag name="kernel.event_listener" event="shipping_method.delete" method="onShippingMethodDelete" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>

        <!-- UrlRewrite Services and Listeners : Note : the routing service is incomplete -->
        <service id="cart.listener.url_rewrite.search" lazy="true" class="%cart.listener.url_rewrite.search.class%">
            <tag name="kernel.event_listener" event="url_rewrite.search" method="onUrlRewriteSearch" priority="50" />
        </service>
        <service id="cart.listener.url_rewrite.list" lazy="true" class="%cart.listener.url_rewrite.list.class%">
            <tag name="kernel.event_listener" event="url_rewrite.search" method="onUrlRewriteList" priority="40" />
            <call method="setRouter">
                <argument type="service" id="router"/>
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.url_rewrite.edit.return" lazy="true" class="%cart.listener.url_rewrite.edit.return.class%">
            <tag name="kernel.event_listener" event="url_rewrite.edit.return" method="onUrlRewriteEditReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.url_rewrite.new.return" lazy="true" class="%cart.listener.url_rewrite.new.return.class%">
            <tag name="kernel.event_listener" event="url_rewrite.new.return" method="onUrlRewriteNewReturn" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setThemeService">
                <argument type="service" id="cart.theme"/>
            </call>
        </service>
        <service id="cart.listener.url_rewrite.create.return" lazy="true" class="%cart.listener.url_rewrite.create.return.class%">
            <tag name="kernel.event_listener" event="url_rewrite.create.return" method="onUrlRewriteCreateReturn" priority="50" />
            <call method="setSession">
                <argument type="service" id="session" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.url_rewrite.update.return" lazy="true" class="%cart.listener.url_rewrite.update.return.class%">
            <tag name="kernel.event_listener" event="url_rewrite.update.return" method="onUrlRewriteUpdateReturn" priority="50" />
            <call method="setSession">
                <argument type="service" id="session" />
            </call>
            <call method="setRouter">
                <argument type="service" id="router" />
            </call>
        </service>
        <service id="cart.listener.url_rewrite.update" lazy="true" class="%cart.listener.url_rewrite.update.class%">
            <tag name="kernel.event_listener" event="url_rewrite.update" method="onUrlRewriteUpdate" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.url_rewrite.insert" lazy="true" class="%cart.listener.url_rewrite.insert.class%">
            <tag name="kernel.event_listener" event="url_rewrite.insert" method="onUrlRewriteInsert" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.url_rewrite.delete" lazy="true" class="%cart.listener.url_rewrite.delete.class%">
            <tag name="kernel.event_listener" event="url_rewrite.delete" method="onUrlRewriteDelete" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>
        <service id="cart.listener.url_rewrite.admin.form" lazy="true" class="%cart.listener.url_rewrite.admin.form.class%">
            <tag name="kernel.event_listener" event="url_rewrite.admin.form" method="onUrlRewriteAdminForm" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
            <call method="setFormFactory">
                <argument type="service" id="form.factory" />
            </call>
        </service>

        <!-- Webhook Listeners -->
        <service id="cart.listener.webhook_log.insert" lazy="true" class="%cart.listener.webhook_log.insert.class%">
            <tag name="kernel.event_listener" event="webhook_log.insert" method="onWebhookLogInsert" priority="50" />
            <call method="setEntityService">
                <argument type="service" id="cart.entity" />
            </call>
        </service>

    </services>
    
</container>
