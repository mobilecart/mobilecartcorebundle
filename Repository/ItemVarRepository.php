<?php

namespace MobileCart\CoreBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ItemVarRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ItemVarRepository
    extends EntityRepository
    implements CartRepositoryInterface
{
    /**
     * @return array
     */
    public function getSortableFields()
    {
        return [
            'id' => 'ID',
            'name' => 'Name',
            'code' => 'Code',
            'url_token' => 'URL Token',
            'datatype' => 'Data Type',
            'form_input' => 'Form Input',
            'is_required' => 'Is Required',
            'is_displayed' => 'Is Displayed',
            'sort_order' => 'Sort Order',
            'is_facet' => 'Is Facet',
            'is_sortable' => 'Is Sortable',
            'is_searchable' => 'Is Searchable',
        ];
    }

    /**
     * @return array
     */
    public function getFilterableFields()
    {
        return [
            [
                'code'  => 'id',
                'label' => 'ID',
                'type'  => 'number',
            ],
            [
                'code'  => 'name',
                'label' => 'Name',
                'type'  => 'string',
            ],
            [
                'code'  => 'code',
                'label' => 'Code',
                'type'  => 'string',
            ],
            [
                'code'  => 'url_token',
                'label' => 'URL Token',
                'type'  => 'string',
            ],
            [
                'code'  => 'datatype',
                'label' => 'Data Type',
                'type'  => 'string',
            ],
            [
                'code'  => 'form_input',
                'label' => 'Form Input',
                'type'  => 'string',
            ],
            [
                'code'  => 'is_facet',
                'label' => 'In Facet',
                'type'  => 'boolean',
                'choices' => [
                    [
                        'value' => 0,
                        'label' => 'No',
                    ],
                    [
                        'value' => 1,
                        'label' => 'Yes',
                    ],
                ],
            ],
            [
                'code'  => 'is_searchable',
                'label' => 'Is Searchable',
                'type'  => 'boolean',
                'choices' => [
                    [
                        'value' => 0,
                        'label' => 'No',
                    ],
                    [
                        'value' => 1,
                        'label' => 'Yes',
                    ],
                ],
            ],
            [
                'code'  => 'is_required',
                'label' => 'In Required',
                'type'  => 'boolean',
                'choices' => [
                    [
                        'value' => 0,
                        'label' => 'No',
                    ],
                    [
                        'value' => 1,
                        'label' => 'Yes',
                    ],
                ],
            ],
        ];
    }

    /**
     * @return bool
     */
    public function isEAV()
    {
        return false;
    }

    /**
     * @return bool
     */
    public function hasImages()
    {
        return false;
    }

    /**
     * @return mixed|string
     */
    public function getSearchField()
    {
        return 'name';
    }

    /**
     * @return int|mixed
     */
    public function getSearchMethod()
    {
        return self::SEARCH_METHOD_LIKE;
    }
}
