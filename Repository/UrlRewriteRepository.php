<?php

namespace MobileCart\CoreBundle\Repository;

use Doctrine\ORM\EntityRepository;

use MobileCart\CoreBundle\Constants\EntityConstants;

/**
 * UrlRewriteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UrlRewriteRepository
    extends EntityRepository
    implements CartRepositoryInterface
{

    /**
     * @return bool
     */
    public function isEAV()
    {
        return false;
    }

    /**
     * @return bool
     */
    public function hasImages()
    {
        return false;
    }

    /**
     * @return array
     */
    public function getSortableFields()
    {
        return [
            'id' => 'ID',
            'object_type' => 'Object Type',
            'object_action' => 'Object Action',
            'request_uri' => 'Request URI',
            'redirect_url' => 'Redirect URL',
        ];
    }

    /**
     * @return array
     */
    public function getFilterableFields()
    {
        return [
            [
                CartRepositoryInterface::CODE  => 'id',
                CartRepositoryInterface::LABEL => 'ID',
                CartRepositoryInterface::DATATYPE =>  'number',
            ],
            [
                CartRepositoryInterface::CODE => 'object_type',
                CartRepositoryInterface::LABEL => 'Object Type',
                CartRepositoryInterface::DATATYPE =>  'string',
                'choices' => [
                    [
                        'value' => EntityConstants::PRODUCT,
                        CartRepositoryInterface::LABEL => 'Product'
                    ],
                    [
                        'value' => EntityConstants::CONTENT,
                        CartRepositoryInterface::LABEL => 'Content',
                    ],
                    [
                        'value' => EntityConstants::CATEGORY,
                        CartRepositoryInterface::LABEL => 'Category',
                    ],
                ],
            ],
            [
                CartRepositoryInterface::CODE => 'object_action',
                CartRepositoryInterface::LABEL => 'Object Action',
                CartRepositoryInterface::DATATYPE =>  'string',
                'choices' => [
                    [
                        'value' => 'list',
                        CartRepositoryInterface::LABEL => 'List',
                    ],
                    [
                        'value' => 'view',
                        CartRepositoryInterface::LABEL => 'View',
                    ],
                ],
            ],
            [
                CartRepositoryInterface::CODE => 'request_uri',
                CartRepositoryInterface::LABEL => 'Request URI',
                CartRepositoryInterface::DATATYPE =>  'string',
            ],
            [
                CartRepositoryInterface::CODE => 'request_url',
                CartRepositoryInterface::LABEL => 'Request URL',
                CartRepositoryInterface::DATATYPE =>  'string',
            ],
        ];
    }

    /**
     * @return mixed|string
     */
    public function getSearchField()
    {
        return 'request_uri';
    }

    /**
     * @return int|mixed
     */
    public function getSearchMethod()
    {
        return self::SEARCH_METHOD_LIKE;
    }

}
