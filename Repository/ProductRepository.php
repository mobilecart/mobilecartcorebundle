<?php

namespace MobileCart\CoreBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductRepository
    extends EntityRepository
    implements CartRepositoryInterface
{
    /**
     * @return bool
     */
    public function isEAV()
    {
        return true;
    }

    /**
     * @return array
     */
    public function getSortableFields()
    {
        return [
            'id' => 'ID',
            'created_at' => 'Created At',
            'page_title' => 'Page Title',
            'name' => 'Name',
            'slug' => 'Slug',
            'sort_order' => 'Sort Order',
            'type' => 'Product Type',
            'sku' => 'SKU',
            'price' => 'Price',
            'special_price' => 'Special Price',
            'qty' => 'Qty',
            'is_in_stock' => 'In Stock',
            'is_taxable' => 'Taxable',
        ];
    }

    /**
     * @return array
     */
    public function getFilterableFields()
    {
        return [
            [
                'code'  => 'id',
                'label' => 'ID',
                'type'  => 'number',
            ],
            [
                'code'  => 'name',
                'label' => 'Name',
                'type'  => 'string',
            ],
            [
                'code'  => 'created_at',
                'label' => 'Created At',
                'type'  => 'date',
            ],
            [
                'code'  => 'sort_order',
                'label' => 'Sort Order',
                'type'  => 'number',
            ],
            [
                'code'  => 'page_title',
                'label' => 'Page Title',
                'type'  => 'string',
            ],
            [
                'code'  => 'slug',
                'label' => 'Slug',
                'type'  => 'string',
            ],
            [
                'code'  => 'type',
                'label' => 'Product Type',
                'type'  => 'number',
                'choices' => [
                    [
                        'value' => 1,
                        'label' => 'Simple'
                    ],
                    [
                        'value' => 2,
                        'label' => 'Configurable',
                    ],
                ],
            ],
            [
                'code'  => 'sku',
                'label' => 'SKU',
                'type'  => 'string',
            ],
            [
                'code'  => 'price',
                'label' => 'Price',
                'type'  => 'number',
            ],
            [
                'code'  => 'special_price',
                'label' => 'Special Price',
                'type'  => 'number',
            ],
            [
                'code'  => 'qty',
                'label' => 'Qty',
                'type'  => 'number',
            ],
            [
                'code'  => 'is_in_stock',
                'label' => 'In Stock',
                'type'  => 'boolean',
                'choices' => [
                    [
                        'value' => 0,
                        'label' => 'No',
                    ],
                    [
                        'value' => 1,
                        'label' => 'Yes',
                    ],
                ],
            ],
            [
                'code'  => 'is_enabled',
                'label' => 'Enabled',
                'type'  => 'boolean',
                'choices' => [
                    [
                        'value' => 0,
                        'label' => 'No',
                    ],
                    [
                        'value' => 1,
                        'label' => 'Yes',
                    ],
                ],
            ],
            [
                'code'  => 'is_taxable',
                'label' => 'Taxable',
                'type'  => 'boolean',
                'choices' => [
                    [
                        'value' => 0,
                        'label' => 'No',
                    ],
                    [
                        'value' => 1,
                        'label' => 'Yes',
                    ],
                ],
            ],
        ];

    }

    /**
     * @return mixed|string
     */
    public function getSearchField()
    {
        return 'fulltext_search';
    }

    /**
     * @return int|mixed
     */
    public function getSearchMethod()
    {
        return self::SEARCH_METHOD_FULLTEXT;
    }
}
