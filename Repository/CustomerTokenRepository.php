<?php

namespace MobileCart\CoreBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * CustomerTokenRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CustomerTokenRepository
    extends EntityRepository
    implements CartRepositoryInterface
{

    /**
     * @return bool
     */
    public function isEAV()
    {
        return false;
    }

    /**
     * @return bool
     */
    public function hasImages()
    {
        return false;
    }

    /**
     * @return array
     */
    public function getSortableFields()
    {
        return [
            'id' => 'ID',
            'customer_id' => 'Customer ID',
            //'last_payment_at' => 'Last Payment At',
            //'next_payment_at' => 'Next Payment At',
            //'last_payment_amount' => 'Last Payment Amount',
            //'next_payment_amount' => 'Next Payment Amount',
        ];
    }

    /**
     * @return array
     */
    public function getFilterableFields()
    {
        return [
            [
                'code'  => 'id',
                'label' => 'ID',
                'datatype' =>  'number',
            ],
            [
                'code'  => 'customer_id',
                'label' => 'Customer ID',
                'datatype' =>  'number',
            ], /*
            [
                'code'  => 'last_payment_at',
                'label' => 'Last Payment At',
                'datatype' =>  'number',
            ],
            [
                'code'  => 'next_payment_at',
                'label' => 'Next Payment At',
                'datatype' =>  'number',
            ],
            [
                'code'  => 'last_payment_amount',
                'label' => 'Last Payment Amount',
                'datatype' =>  'number',
            ],
            [
                'code'  => 'next_payment_amount',
                'label' => 'Next Payment Amount',
                'datatype' =>  'number',
            ], //*/
        ];
    }

    /**
     * @return mixed|string
     */
    public function getSearchField()
    {
        return 'id';
    }

    /**
     * @return int|mixed
     */
    public function getSearchMethod()
    {
        return self::SEARCH_METHOD_LIKE;
    }
}
